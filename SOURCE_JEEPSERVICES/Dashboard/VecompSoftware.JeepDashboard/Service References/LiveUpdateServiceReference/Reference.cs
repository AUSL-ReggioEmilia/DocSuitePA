//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VecompSoftware.JeepDashboard.LiveUpdateServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateDefinition", Namespace="http://schemas.datacontract.org/2004/07/JeepServiceLiveUpdate.Interfaces")]
    [System.SerializableAttribute()]
    public partial class UpdateDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri DownloadUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExistsUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatestReleaseNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LatestUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatestVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri DownloadUri {
            get {
                return this.DownloadUriField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUriField, value) != true)) {
                    this.DownloadUriField = value;
                    this.RaisePropertyChanged("DownloadUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExistsUpdate {
            get {
                return this.ExistsUpdateField;
            }
            set {
                if ((this.ExistsUpdateField.Equals(value) != true)) {
                    this.ExistsUpdateField = value;
                    this.RaisePropertyChanged("ExistsUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LatestReleaseNotes {
            get {
                return this.LatestReleaseNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestReleaseNotesField, value) != true)) {
                    this.LatestReleaseNotesField = value;
                    this.RaisePropertyChanged("LatestReleaseNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LatestUpdate {
            get {
                return this.LatestUpdateField;
            }
            set {
                if ((this.LatestUpdateField.Equals(value) != true)) {
                    this.LatestUpdateField = value;
                    this.RaisePropertyChanged("LatestUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LatestVersion {
            get {
                return this.LatestVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestVersionField, value) != true)) {
                    this.LatestVersionField = value;
                    this.RaisePropertyChanged("LatestVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ModuleId {
            get {
                return this.ModuleIdField;
            }
            set {
                if ((this.ModuleIdField.Equals(value) != true)) {
                    this.ModuleIdField = value;
                    this.RaisePropertyChanged("ModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleRelease", Namespace="http://schemas.datacontract.org/2004/07/JeepServiceLiveUpdate.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ModuleRelease : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ZipObject ModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseNotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ZipObject Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleField, value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseNotes {
            get {
                return this.ReleaseNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseNotesField, value) != true)) {
                    this.ReleaseNotesField = value;
                    this.RaisePropertyChanged("ReleaseNotes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZipObject", Namespace="http://schemas.datacontract.org/2004/07/JeepServiceLiveUpdate.Interfaces")]
    [System.SerializableAttribute()]
    public partial class ZipObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BlobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Blob {
            get {
                return this.BlobField;
            }
            set {
                if ((object.ReferenceEquals(this.BlobField, value) != true)) {
                    this.BlobField = value;
                    this.RaisePropertyChanged("Blob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LiveUpdateServiceReference.ILiveUpdate")]
    public interface ILiveUpdate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveUpdate/GetLastVersion", ReplyAction="http://tempuri.org/ILiveUpdate/GetLastVersionResponse")]
        VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition GetLastVersion(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILiveUpdate/GetLastVersion", ReplyAction="http://tempuri.org/ILiveUpdate/GetLastVersionResponse")]
        System.IAsyncResult BeginGetLastVersion(string moduleName, System.AsyncCallback callback, object asyncState);
        
        VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition EndGetLastVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveUpdate/GetLastVersions", ReplyAction="http://tempuri.org/ILiveUpdate/GetLastVersionsResponse")]
        System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> GetLastVersions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILiveUpdate/GetLastVersions", ReplyAction="http://tempuri.org/ILiveUpdate/GetLastVersionsResponse")]
        System.IAsyncResult BeginGetLastVersions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> EndGetLastVersions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveUpdate/GetUpdate", ReplyAction="http://tempuri.org/ILiveUpdate/GetUpdateResponse")]
        VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition GetUpdate(string moduleName, string comparingVersion);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILiveUpdate/GetUpdate", ReplyAction="http://tempuri.org/ILiveUpdate/GetUpdateResponse")]
        System.IAsyncResult BeginGetUpdate(string moduleName, string comparingVersion, System.AsyncCallback callback, object asyncState);
        
        VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition EndGetUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILiveUpdate/PutNewVersion", ReplyAction="http://tempuri.org/ILiveUpdate/PutNewVersionResponse")]
        void PutNewVersion(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILiveUpdate/PutNewVersion", ReplyAction="http://tempuri.org/ILiveUpdate/PutNewVersionResponse")]
        System.IAsyncResult BeginPutNewVersion(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release, System.AsyncCallback callback, object asyncState);
        
        void EndPutNewVersion(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveUpdateChannel : VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ILiveUpdate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiveUpdateClient : System.ServiceModel.ClientBase<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ILiveUpdate>, VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ILiveUpdate {
        
        private BeginOperationDelegate onBeginGetLastVersionDelegate;
        
        private EndOperationDelegate onEndGetLastVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastVersionsDelegate;
        
        private EndOperationDelegate onEndGetLastVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpdateDelegate;
        
        private EndOperationDelegate onEndGetUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginPutNewVersionDelegate;
        
        private EndOperationDelegate onEndPutNewVersionDelegate;
        
        private System.Threading.SendOrPostCallback onPutNewVersionCompletedDelegate;
        
        public LiveUpdateClient() {
        }
        
        public LiveUpdateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LiveUpdateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveUpdateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveUpdateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetLastVersionCompletedEventArgs> GetLastVersionCompleted;
        
        public event System.EventHandler<GetLastVersionsCompletedEventArgs> GetLastVersionsCompleted;
        
        public event System.EventHandler<GetUpdateCompletedEventArgs> GetUpdateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PutNewVersionCompleted;
        
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition GetLastVersion(string moduleName) {
            return base.Channel.GetLastVersion(moduleName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastVersion(string moduleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastVersion(moduleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition EndGetLastVersion(System.IAsyncResult result) {
            return base.Channel.EndGetLastVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetLastVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string moduleName = ((string)(inValues[0]));
            return this.BeginGetLastVersion(moduleName, callback, asyncState);
        }
        
        private object[] OnEndGetLastVersion(System.IAsyncResult result) {
            VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition retVal = this.EndGetLastVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastVersionCompleted(object state) {
            if ((this.GetLastVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastVersionCompleted(this, new GetLastVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastVersionAsync(string moduleName) {
            this.GetLastVersionAsync(moduleName, null);
        }
        
        public void GetLastVersionAsync(string moduleName, object userState) {
            if ((this.onBeginGetLastVersionDelegate == null)) {
                this.onBeginGetLastVersionDelegate = new BeginOperationDelegate(this.OnBeginGetLastVersion);
            }
            if ((this.onEndGetLastVersionDelegate == null)) {
                this.onEndGetLastVersionDelegate = new EndOperationDelegate(this.OnEndGetLastVersion);
            }
            if ((this.onGetLastVersionCompletedDelegate == null)) {
                this.onGetLastVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastVersionDelegate, new object[] {
                        moduleName}, this.onEndGetLastVersionDelegate, this.onGetLastVersionCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> GetLastVersions() {
            return base.Channel.GetLastVersions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLastVersions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastVersions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> EndGetLastVersions(System.IAsyncResult result) {
            return base.Channel.EndGetLastVersions(result);
        }
        
        private System.IAsyncResult OnBeginGetLastVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLastVersions(callback, asyncState);
        }
        
        private object[] OnEndGetLastVersions(System.IAsyncResult result) {
            System.Collections.Generic.List<VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition> retVal = this.EndGetLastVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastVersionsCompleted(object state) {
            if ((this.GetLastVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastVersionsCompleted(this, new GetLastVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastVersionsAsync() {
            this.GetLastVersionsAsync(null);
        }
        
        public void GetLastVersionsAsync(object userState) {
            if ((this.onBeginGetLastVersionsDelegate == null)) {
                this.onBeginGetLastVersionsDelegate = new BeginOperationDelegate(this.OnBeginGetLastVersions);
            }
            if ((this.onEndGetLastVersionsDelegate == null)) {
                this.onEndGetLastVersionsDelegate = new EndOperationDelegate(this.OnEndGetLastVersions);
            }
            if ((this.onGetLastVersionsCompletedDelegate == null)) {
                this.onGetLastVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastVersionsDelegate, null, this.onEndGetLastVersionsDelegate, this.onGetLastVersionsCompletedDelegate, userState);
        }
        
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition GetUpdate(string moduleName, string comparingVersion) {
            return base.Channel.GetUpdate(moduleName, comparingVersion);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUpdate(string moduleName, string comparingVersion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpdate(moduleName, comparingVersion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition EndGetUpdate(System.IAsyncResult result) {
            return base.Channel.EndGetUpdate(result);
        }
        
        private System.IAsyncResult OnBeginGetUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string moduleName = ((string)(inValues[0]));
            string comparingVersion = ((string)(inValues[1]));
            return this.BeginGetUpdate(moduleName, comparingVersion, callback, asyncState);
        }
        
        private object[] OnEndGetUpdate(System.IAsyncResult result) {
            VecompSoftware.JeepDashboard.LiveUpdateServiceReference.UpdateDefinition retVal = this.EndGetUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpdateCompleted(object state) {
            if ((this.GetUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpdateCompleted(this, new GetUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpdateAsync(string moduleName, string comparingVersion) {
            this.GetUpdateAsync(moduleName, comparingVersion, null);
        }
        
        public void GetUpdateAsync(string moduleName, string comparingVersion, object userState) {
            if ((this.onBeginGetUpdateDelegate == null)) {
                this.onBeginGetUpdateDelegate = new BeginOperationDelegate(this.OnBeginGetUpdate);
            }
            if ((this.onEndGetUpdateDelegate == null)) {
                this.onEndGetUpdateDelegate = new EndOperationDelegate(this.OnEndGetUpdate);
            }
            if ((this.onGetUpdateCompletedDelegate == null)) {
                this.onGetUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpdateDelegate, new object[] {
                        moduleName,
                        comparingVersion}, this.onEndGetUpdateDelegate, this.onGetUpdateCompletedDelegate, userState);
        }
        
        public void PutNewVersion(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release) {
            base.Channel.PutNewVersion(release);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPutNewVersion(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPutNewVersion(release, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPutNewVersion(System.IAsyncResult result) {
            base.Channel.EndPutNewVersion(result);
        }
        
        private System.IAsyncResult OnBeginPutNewVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release = ((VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease)(inValues[0]));
            return this.BeginPutNewVersion(release, callback, asyncState);
        }
        
        private object[] OnEndPutNewVersion(System.IAsyncResult result) {
            this.EndPutNewVersion(result);
            return null;
        }
        
        private void OnPutNewVersionCompleted(object state) {
            if ((this.PutNewVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PutNewVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PutNewVersionAsync(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release) {
            this.PutNewVersionAsync(release, null);
        }
        
        public void PutNewVersionAsync(VecompSoftware.JeepDashboard.LiveUpdateServiceReference.ModuleRelease release, object userState) {
            if ((this.onBeginPutNewVersionDelegate == null)) {
                this.onBeginPutNewVersionDelegate = new BeginOperationDelegate(this.OnBeginPutNewVersion);
            }
            if ((this.onEndPutNewVersionDelegate == null)) {
                this.onEndPutNewVersionDelegate = new EndOperationDelegate(this.OnEndPutNewVersion);
            }
            if ((this.onPutNewVersionCompletedDelegate == null)) {
                this.onPutNewVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPutNewVersionCompleted);
            }
            base.InvokeAsync(this.onBeginPutNewVersionDelegate, new object[] {
                        release}, this.onEndPutNewVersionDelegate, this.onPutNewVersionCompletedDelegate, userState);
        }
    }
}
