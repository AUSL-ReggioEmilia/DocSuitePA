//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VecompSoftware.JeepService.DocSeriesExporter.WsSeriesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSeriesService.IWSSeries")]
    public interface IWSSeries {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/IsAlive", ReplyAction="http://tempuri.org/IWSSeries/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/Insert", ReplyAction="http://tempuri.org/IWSSeries/InsertResponse")]
        string Insert(string xmlSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/Consultation", ReplyAction="http://tempuri.org/IWSSeries/ConsultationResponse")]
        string Consultation(int id, bool withDocument, bool withAnnexed, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetDocumentSeriesItem", ReplyAction="http://tempuri.org/IWSSeries/GetDocumentSeriesItemResponse")]
        string GetDocumentSeriesItem(int id, bool withDocument, bool withAnnexed, bool includeStream, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/Update", ReplyAction="http://tempuri.org/IWSSeries/UpdateResponse")]
        void Update(string xmlSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/AddAnnexed", ReplyAction="http://tempuri.org/IWSSeries/AddAnnexedResponse")]
        void AddAnnexed(int id, string nameDocument, string base64DocumentStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/Search", ReplyAction="http://tempuri.org/IWSSeries/SearchResponse")]
        string Search(string xmlFinder, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetPublicationEnabledContainers", ReplyAction="http://tempuri.org/IWSSeries/GetPublicationEnabledContainersResponse")]
        string GetPublicationEnabledContainers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetFamilies", ReplyAction="http://tempuri.org/IWSSeries/GetFamiliesResponse")]
        string GetFamilies(bool onlyPublicationEnabled, bool includeSubsections, bool includeEmptyFamilies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetDynamicData", ReplyAction="http://tempuri.org/IWSSeries/GetDynamicDataResponse")]
        string GetDynamicData(int idDocumentSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetMainDocument", ReplyAction="http://tempuri.org/IWSSeries/GetMainDocumentResponse")]
        string GetMainDocument(int idDocumentSeriesItem, System.Guid idDoc, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetAnnexed", ReplyAction="http://tempuri.org/IWSSeries/GetAnnexedResponse")]
        string GetAnnexed(int idDocumentSeriesItem, System.Guid idAnnexed, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetDocumentSeriesItemsByResolution", ReplyAction="http://tempuri.org/IWSSeries/GetDocumentSeriesItemsByResolutionResponse")]
        string GetDocumentSeriesItemsByResolution(int idResolution, bool pdf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetFamily", ReplyAction="http://tempuri.org/IWSSeries/GetFamilyResponse")]
        string GetFamily(int idFamily, bool onlyPublicationEnabled, bool includeSubsections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetDocumentSeries", ReplyAction="http://tempuri.org/IWSSeries/GetDocumentSeriesResponse")]
        string GetDocumentSeries(int idSeries, bool includeSubsections);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/SearchCount", ReplyAction="http://tempuri.org/IWSSeries/SearchCountResponse")]
        int SearchCount(string xmlFinder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSSeries/GetIndex", ReplyAction="http://tempuri.org/IWSSeries/GetIndexResponse")]
        string GetIndex(int idSeries, string impersonatingUser, string urlFile, string titolo, string @abstract, string entePubblicatore, string licenza, string urlMask);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSSeriesChannel : VecompSoftware.JeepService.DocSeriesExporter.WsSeriesService.IWSSeries, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSSeriesClient : System.ServiceModel.ClientBase<VecompSoftware.JeepService.DocSeriesExporter.WsSeriesService.IWSSeries>, VecompSoftware.JeepService.DocSeriesExporter.WsSeriesService.IWSSeries {
        
        public WSSeriesClient() {
        }
        
        public WSSeriesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSSeriesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSeriesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSeriesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public string Insert(string xmlSeries) {
            return base.Channel.Insert(xmlSeries);
        }
        
        public string Consultation(int id, bool withDocument, bool withAnnexed, bool pdf) {
            return base.Channel.Consultation(id, withDocument, withAnnexed, pdf);
        }
        
        public string GetDocumentSeriesItem(int id, bool withDocument, bool withAnnexed, bool includeStream, bool pdf) {
            return base.Channel.GetDocumentSeriesItem(id, withDocument, withAnnexed, includeStream, pdf);
        }
        
        public void Update(string xmlSeries) {
            base.Channel.Update(xmlSeries);
        }
        
        public void AddAnnexed(int id, string nameDocument, string base64DocumentStream) {
            base.Channel.AddAnnexed(id, nameDocument, base64DocumentStream);
        }
        
        public string Search(string xmlFinder, bool pdf) {
            return base.Channel.Search(xmlFinder, pdf);
        }
        
        public string GetPublicationEnabledContainers() {
            return base.Channel.GetPublicationEnabledContainers();
        }
        
        public string GetFamilies(bool onlyPublicationEnabled, bool includeSubsections, bool includeEmptyFamilies) {
            return base.Channel.GetFamilies(onlyPublicationEnabled, includeSubsections, includeEmptyFamilies);
        }
        
        public string GetDynamicData(int idDocumentSeries) {
            return base.Channel.GetDynamicData(idDocumentSeries);
        }
        
        public string GetMainDocument(int idDocumentSeriesItem, System.Guid idDoc, bool pdf) {
            return base.Channel.GetMainDocument(idDocumentSeriesItem, idDoc, pdf);
        }
        
        public string GetAnnexed(int idDocumentSeriesItem, System.Guid idAnnexed, bool pdf) {
            return base.Channel.GetAnnexed(idDocumentSeriesItem, idAnnexed, pdf);
        }
        
        public string GetDocumentSeriesItemsByResolution(int idResolution, bool pdf) {
            return base.Channel.GetDocumentSeriesItemsByResolution(idResolution, pdf);
        }
        
        public string GetFamily(int idFamily, bool onlyPublicationEnabled, bool includeSubsections) {
            return base.Channel.GetFamily(idFamily, onlyPublicationEnabled, includeSubsections);
        }
        
        public string GetDocumentSeries(int idSeries, bool includeSubsections) {
            return base.Channel.GetDocumentSeries(idSeries, includeSubsections);
        }
        
        public int SearchCount(string xmlFinder) {
            return base.Channel.SearchCount(xmlFinder);
        }
        
        public string GetIndex(int idSeries, string impersonatingUser, string urlFile, string titolo, string @abstract, string entePubblicatore, string licenza, string urlMask) {
            return base.Channel.GetIndex(idSeries, impersonatingUser, urlFile, titolo, @abstract, entePubblicatore, licenza, urlMask);
        }
    }
}
