//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VecompSoftware.DocSuiteWeb.API.Connector.OChartService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OChartService.IOChartService")]
    public interface IOChartService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOChartService/IsAlive", ReplyAction="http://tempuri.org/IOChartService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOChartService/GetEffective", ReplyAction="http://tempuri.org/IOChartService/GetEffectiveResponse")]
        string GetEffective();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOChartService/Transform", ReplyAction="http://tempuri.org/IOChartService/TransformResponse")]
        bool Transform(string arrayOrgDeptDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOChartServiceChannel : VecompSoftware.DocSuiteWeb.API.Connector.OChartService.IOChartService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OChartServiceClient : System.ServiceModel.ClientBase<VecompSoftware.DocSuiteWeb.API.Connector.OChartService.IOChartService>, VecompSoftware.DocSuiteWeb.API.Connector.OChartService.IOChartService {
        
        public OChartServiceClient() {
        }
        
        public OChartServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OChartServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OChartServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OChartServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public string GetEffective() {
            return base.Channel.GetEffective();
        }
        
        public bool Transform(string arrayOrgDeptDTO) {
            return base.Channel.Transform(arrayOrgDeptDTO);
        }
    }
}
