//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblosDs.Document.AdminCentral.ServiceReferenceLog {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Log", Namespace="http://BiblosDS/2009/10/RuleOperator")]
    [System.SerializableAttribute()]
    public partial class Log : BiblosDs.Document.AdminCentral.ServiceReferenceLog.BiblosDSObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdArchiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdCorrelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BiblosDs.Document.AdminCentral.ServiceReferenceLog.LoggingOperationType IdOperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdStorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdArchive {
            get {
                return this.IdArchiveField;
            }
            set {
                if ((this.IdArchiveField.Equals(value) != true)) {
                    this.IdArchiveField = value;
                    this.RaisePropertyChanged("IdArchive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> IdCorrelation {
            get {
                return this.IdCorrelationField;
            }
            set {
                if ((this.IdCorrelationField.Equals(value) != true)) {
                    this.IdCorrelationField = value;
                    this.RaisePropertyChanged("IdCorrelation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdEntry {
            get {
                return this.IdEntryField;
            }
            set {
                if ((this.IdEntryField.Equals(value) != true)) {
                    this.IdEntryField = value;
                    this.RaisePropertyChanged("IdEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BiblosDs.Document.AdminCentral.ServiceReferenceLog.LoggingOperationType IdOperationType {
            get {
                return this.IdOperationTypeField;
            }
            set {
                if ((this.IdOperationTypeField.Equals(value) != true)) {
                    this.IdOperationTypeField = value;
                    this.RaisePropertyChanged("IdOperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IdStorage {
            get {
                return this.IdStorageField;
            }
            set {
                if ((this.IdStorageField.Equals(value) != true)) {
                    this.IdStorageField = value;
                    this.RaisePropertyChanged("IdStorage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiblosDSObject", Namespace="http://BiblosDS/2009/10/BiblosDSObject")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log))]
    public partial class BiblosDSObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggingOperationType", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Enums")]
    public enum LoggingOperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosDS_General = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosDS_GetAlive = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosDS_InsertDocument = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosDS_CheckInTransitoDocument = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosWs_General = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosWs_Compatibility = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiblosDS_GetDocument = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBase", Namespace="http://BiblosDS/2009/10/ResponseBase")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse))]
    public partial class ResponseBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BiblosDs.Document.AdminCentral.ServiceReferenceLog.ResponseError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BiblosDs.Document.AdminCentral.ServiceReferenceLog.ResponseError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErros {
            get {
                return this.HasErrosField;
            }
            set {
                if ((this.HasErrosField.Equals(value) != true)) {
                    this.HasErrosField = value;
                    this.RaisePropertyChanged("HasErros");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseError", Namespace="http://BiblosDS/2009/10/ResponseError")]
    [System.SerializableAttribute()]
    public partial class ResponseError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogResponse", Namespace="http://BiblosDS/2009/10/LogResponse")]
    [System.SerializableAttribute()]
    public partial class LogResponse : BiblosDs.Document.AdminCentral.ServiceReferenceLog.ResponseBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> LogsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> Logs {
            get {
                return this.LogsField;
            }
            set {
                if ((object.ReferenceEquals(this.LogsField, value) != true)) {
                    this.LogsField = value;
                    this.RaisePropertyChanged("Logs");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vecomp.BiblosDs.Log", ConfigurationName="ServiceReferenceLog.ILog")]
    public interface ILog {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Log/ILog/DoWork", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Vecomp.BiblosDs.Log/ILog/DoWork", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Log/ILog/GetAllLogs", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetAllLogsResponse")]
        System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> GetAllLogs(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Vecomp.BiblosDs.Log/ILog/GetAllLogs", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetAllLogsResponse")]
        System.IAsyncResult BeginGetAllLogs(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
        
        System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> EndGetAllLogs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Log/ILog/GetArchiveLogs", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetArchiveLogsResponse")]
        System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> GetArchiveLogs(System.DateTime from, System.Guid idArchive);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Vecomp.BiblosDs.Log/ILog/GetArchiveLogs", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetArchiveLogsResponse")]
        System.IAsyncResult BeginGetArchiveLogs(System.DateTime from, System.Guid idArchive, System.AsyncCallback callback, object asyncState);
        
        System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> EndGetArchiveLogs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Log/ILog/GetLogsPaged", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetLogsPagedResponse")]
        BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse GetLogsPaged(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Vecomp.BiblosDs.Log/ILog/GetLogsPaged", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetLogsPagedResponse")]
        System.IAsyncResult BeginGetLogsPaged(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take, System.AsyncCallback callback, object asyncState);
        
        BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse EndGetLogsPaged(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Log/ILog/GetLogIDArchives", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetLogIDArchivesResponse")]
        System.ComponentModel.BindingList<System.Guid> GetLogIDArchives();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://Vecomp.BiblosDs.Log/ILog/GetLogIDArchives", ReplyAction="http://Vecomp.BiblosDs.Log/ILog/GetLogIDArchivesResponse")]
        System.IAsyncResult BeginGetLogIDArchives(System.AsyncCallback callback, object asyncState);
        
        System.ComponentModel.BindingList<System.Guid> EndGetLogIDArchives(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogChannel : BiblosDs.Document.AdminCentral.ServiceReferenceLog.ILog, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArchiveLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArchiveLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogsPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogsPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogIDArchivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogIDArchivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.ComponentModel.BindingList<System.Guid> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.ComponentModel.BindingList<System.Guid>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogClient : System.ServiceModel.ClientBase<BiblosDs.Document.AdminCentral.ServiceReferenceLog.ILog>, BiblosDs.Document.AdminCentral.ServiceReferenceLog.ILog {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLogsDelegate;
        
        private EndOperationDelegate onEndGetAllLogsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLogsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArchiveLogsDelegate;
        
        private EndOperationDelegate onEndGetArchiveLogsDelegate;
        
        private System.Threading.SendOrPostCallback onGetArchiveLogsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLogsPagedDelegate;
        
        private EndOperationDelegate onEndGetLogsPagedDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogsPagedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLogIDArchivesDelegate;
        
        private EndOperationDelegate onEndGetLogIDArchivesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogIDArchivesCompletedDelegate;
        
        public LogClient() {
        }
        
        public LogClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetAllLogsCompletedEventArgs> GetAllLogsCompleted;
        
        public event System.EventHandler<GetArchiveLogsCompletedEventArgs> GetArchiveLogsCompleted;
        
        public event System.EventHandler<GetLogsPagedCompletedEventArgs> GetLogsPagedCompleted;
        
        public event System.EventHandler<GetLogIDArchivesCompletedEventArgs> GetLogIDArchivesCompleted;
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            this.EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> GetAllLogs(System.DateTime from, System.DateTime to) {
            return base.Channel.GetAllLogs(from, to);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLogs(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLogs(from, to, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> EndGetAllLogs(System.IAsyncResult result) {
            return base.Channel.EndGetAllLogs(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLogs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            return this.BeginGetAllLogs(from, to, callback, asyncState);
        }
        
        private object[] OnEndGetAllLogs(System.IAsyncResult result) {
            System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> retVal = this.EndGetAllLogs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLogsCompleted(object state) {
            if ((this.GetAllLogsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLogsCompleted(this, new GetAllLogsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLogsAsync(System.DateTime from, System.DateTime to) {
            this.GetAllLogsAsync(from, to, null);
        }
        
        public void GetAllLogsAsync(System.DateTime from, System.DateTime to, object userState) {
            if ((this.onBeginGetAllLogsDelegate == null)) {
                this.onBeginGetAllLogsDelegate = new BeginOperationDelegate(this.OnBeginGetAllLogs);
            }
            if ((this.onEndGetAllLogsDelegate == null)) {
                this.onEndGetAllLogsDelegate = new EndOperationDelegate(this.OnEndGetAllLogs);
            }
            if ((this.onGetAllLogsCompletedDelegate == null)) {
                this.onGetAllLogsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLogsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLogsDelegate, new object[] {
                        from,
                        to}, this.onEndGetAllLogsDelegate, this.onGetAllLogsCompletedDelegate, userState);
        }
        
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> GetArchiveLogs(System.DateTime from, System.Guid idArchive) {
            return base.Channel.GetArchiveLogs(from, idArchive);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetArchiveLogs(System.DateTime from, System.Guid idArchive, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArchiveLogs(from, idArchive, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> EndGetArchiveLogs(System.IAsyncResult result) {
            return base.Channel.EndGetArchiveLogs(result);
        }
        
        private System.IAsyncResult OnBeginGetArchiveLogs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.Guid idArchive = ((System.Guid)(inValues[1]));
            return this.BeginGetArchiveLogs(from, idArchive, callback, asyncState);
        }
        
        private object[] OnEndGetArchiveLogs(System.IAsyncResult result) {
            System.ComponentModel.BindingList<BiblosDs.Document.AdminCentral.ServiceReferenceLog.Log> retVal = this.EndGetArchiveLogs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArchiveLogsCompleted(object state) {
            if ((this.GetArchiveLogsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArchiveLogsCompleted(this, new GetArchiveLogsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArchiveLogsAsync(System.DateTime from, System.Guid idArchive) {
            this.GetArchiveLogsAsync(from, idArchive, null);
        }
        
        public void GetArchiveLogsAsync(System.DateTime from, System.Guid idArchive, object userState) {
            if ((this.onBeginGetArchiveLogsDelegate == null)) {
                this.onBeginGetArchiveLogsDelegate = new BeginOperationDelegate(this.OnBeginGetArchiveLogs);
            }
            if ((this.onEndGetArchiveLogsDelegate == null)) {
                this.onEndGetArchiveLogsDelegate = new EndOperationDelegate(this.OnEndGetArchiveLogs);
            }
            if ((this.onGetArchiveLogsCompletedDelegate == null)) {
                this.onGetArchiveLogsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArchiveLogsCompleted);
            }
            base.InvokeAsync(this.onBeginGetArchiveLogsDelegate, new object[] {
                        from,
                        idArchive}, this.onEndGetArchiveLogsDelegate, this.onGetArchiveLogsCompletedDelegate, userState);
        }
        
        public BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse GetLogsPaged(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take) {
            return base.Channel.GetLogsPaged(from, to, idArchive, skip, take);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLogsPaged(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogsPaged(from, to, idArchive, skip, take, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse EndGetLogsPaged(System.IAsyncResult result) {
            return base.Channel.EndGetLogsPaged(result);
        }
        
        private System.IAsyncResult OnBeginGetLogsPaged(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime from = ((System.DateTime)(inValues[0]));
            System.DateTime to = ((System.DateTime)(inValues[1]));
            System.Nullable<System.Guid> idArchive = ((System.Nullable<System.Guid>)(inValues[2]));
            int skip = ((int)(inValues[3]));
            int take = ((int)(inValues[4]));
            return this.BeginGetLogsPaged(from, to, idArchive, skip, take, callback, asyncState);
        }
        
        private object[] OnEndGetLogsPaged(System.IAsyncResult result) {
            BiblosDs.Document.AdminCentral.ServiceReferenceLog.LogResponse retVal = this.EndGetLogsPaged(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogsPagedCompleted(object state) {
            if ((this.GetLogsPagedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogsPagedCompleted(this, new GetLogsPagedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogsPagedAsync(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take) {
            this.GetLogsPagedAsync(from, to, idArchive, skip, take, null);
        }
        
        public void GetLogsPagedAsync(System.DateTime from, System.DateTime to, System.Nullable<System.Guid> idArchive, int skip, int take, object userState) {
            if ((this.onBeginGetLogsPagedDelegate == null)) {
                this.onBeginGetLogsPagedDelegate = new BeginOperationDelegate(this.OnBeginGetLogsPaged);
            }
            if ((this.onEndGetLogsPagedDelegate == null)) {
                this.onEndGetLogsPagedDelegate = new EndOperationDelegate(this.OnEndGetLogsPaged);
            }
            if ((this.onGetLogsPagedCompletedDelegate == null)) {
                this.onGetLogsPagedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogsPagedCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogsPagedDelegate, new object[] {
                        from,
                        to,
                        idArchive,
                        skip,
                        take}, this.onEndGetLogsPagedDelegate, this.onGetLogsPagedCompletedDelegate, userState);
        }
        
        public System.ComponentModel.BindingList<System.Guid> GetLogIDArchives() {
            return base.Channel.GetLogIDArchives();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLogIDArchives(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogIDArchives(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.ComponentModel.BindingList<System.Guid> EndGetLogIDArchives(System.IAsyncResult result) {
            return base.Channel.EndGetLogIDArchives(result);
        }
        
        private System.IAsyncResult OnBeginGetLogIDArchives(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLogIDArchives(callback, asyncState);
        }
        
        private object[] OnEndGetLogIDArchives(System.IAsyncResult result) {
            System.ComponentModel.BindingList<System.Guid> retVal = this.EndGetLogIDArchives(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogIDArchivesCompleted(object state) {
            if ((this.GetLogIDArchivesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogIDArchivesCompleted(this, new GetLogIDArchivesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogIDArchivesAsync() {
            this.GetLogIDArchivesAsync(null);
        }
        
        public void GetLogIDArchivesAsync(object userState) {
            if ((this.onBeginGetLogIDArchivesDelegate == null)) {
                this.onBeginGetLogIDArchivesDelegate = new BeginOperationDelegate(this.OnBeginGetLogIDArchives);
            }
            if ((this.onEndGetLogIDArchivesDelegate == null)) {
                this.onEndGetLogIDArchivesDelegate = new EndOperationDelegate(this.OnEndGetLogIDArchives);
            }
            if ((this.onGetLogIDArchivesCompletedDelegate == null)) {
                this.onGetLogIDArchivesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogIDArchivesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogIDArchivesDelegate, null, this.onEndGetLogIDArchivesDelegate, this.onGetLogIDArchivesCompletedDelegate, userState);
        }
    }
}
