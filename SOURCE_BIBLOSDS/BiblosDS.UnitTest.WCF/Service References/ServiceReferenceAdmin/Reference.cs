//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblosDS.UnitTest.WCF.ServiceReferenceAdmin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vecomp.BiblosDs.Administration", ConfigurationName="ServiceReferenceAdmin.IAdministration")]
    public interface IAdministration {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttribute", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttributeBiblosDsExcepti" +
            "onFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddAttribute(BiblosDS.Library.Common.Objects.DocumentAttribute DocumentAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttributeGroup", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttributeGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddAttributeGroupBiblosDsEx" +
            "ceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttributeGroup", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttributeGroupRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttributeGroupBiblosD" +
            "sExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttributeGroup", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttributeGroupRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttributeGroupBiblosD" +
            "sExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DeleteAttributeGroup(System.Guid IdAttributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttribute", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateAttributeBiblosDsExce" +
            "ptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateAttribute(BiblosDS.Library.Common.Objects.DocumentAttribute DocumentAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttribute", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteAttributeBiblosDsExce" +
            "ptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DeleteAttribute(System.Guid IdAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageBiblosDsExcept" +
            "ionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateStorage(BiblosDS.Library.Common.Objects.DocumentStorage storage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchiveStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchiveStorageRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchiveStorageBiblosD" +
            "sExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveStorageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveStorageBiblosDsEx" +
            "ceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteArchiveStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteArchiveStorageRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteArchiveStorageBiblosD" +
            "sExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DeleteArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddDocumentAttributeGroup", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddDocumentAttributeGroupRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddDocumentAttributeGroupBi" +
            "blosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddDocumentAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateDocumentAttributeGrou" +
            "p", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateDocumentAttributeGrou" +
            "pResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateDocumentAttributeGrou" +
            "pBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateDocumentAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveCertificate", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveCertificateRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveCertificateBiblos" +
            "DsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddArchiveCertificate(System.Guid idArchive, string userName, string pin, string fileName, byte[] certificateBlob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveCertificate", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveCertificateRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveCertificateBiblos" +
            "DsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentArchiveCertificate GetArchiveCertificate(System.Guid idArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRulesFromStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRulesFromStorageR" +
            "esponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRulesFromStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRuleResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageRule GetStorageRule(System.Guid IdStorage, System.Guid IdAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRules", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRulesResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRules(System.Guid IdStorage, System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesType", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesTypeResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageType[] GetStoragesType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocument", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocumentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document GetDocument(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributeModes", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributeModesResponse")]
        BiblosDS.Library.Common.Objects.DocumentAttributeMode[] GetAttributeModes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreaRuleFromStora" +
            "geArea", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreaRuleFromStora" +
            "geAreaResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageAreaRule[] GetStorageAreaRuleFromStorageArea(System.Guid IdStorageArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreaRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreaRuleResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageAreaRule GetStorageAreaRule(System.Guid IdStorageArea, System.Guid IdAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetRuleOperators", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetRuleOperatorsResponse")]
        BiblosDS.Library.Common.Objects.DocumentRuleOperator[] GetRuleOperators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetPreservationFiscalDocume" +
            "ntsTypes", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetPreservationFiscalDocume" +
            "ntsTypesResponse")]
        string[] GetPreservationFiscalDocumentsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetServers", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetServersResponse")]
        BiblosDS.Library.Common.Objects.Server[] GetServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetServerResponse")]
        BiblosDS.Library.Common.Objects.Server GetServer(System.Guid serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateServerResponse")]
        BiblosDS.Library.Common.Objects.Server UpdateServer(BiblosDS.Library.Common.Objects.Server server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddServerResponse")]
        BiblosDS.Library.Common.Objects.Server AddServer(BiblosDS.Library.Common.Objects.Server server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteServerResponse")]
        bool DeleteServer(BiblosDS.Library.Common.Objects.Server server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveServerConfig", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveServerConfigRespo" +
            "nse")]
        BiblosDS.Library.Common.Objects.ArchiveServerConfig AddArchiveServerConfig(BiblosDS.Library.Common.Objects.ArchiveServerConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteArchiveServerConfig", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DeleteArchiveServerConfigRe" +
            "sponse")]
        void DeleteArchiveServerConfig(BiblosDS.Library.Common.Objects.ArchiveServerConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddStorage(BiblosDS.Library.Common.Objects.DocumentStorage Storage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddArchiveBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        System.Guid AddArchive(BiblosDS.Library.Common.Objects.DocumentArchive Archive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateArchiveBiblosDsExcept" +
            "ionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateArchive(BiblosDS.Library.Common.Objects.DocumentArchive Archive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageToArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageToArchiveResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageToArchiveBiblosDs" +
            "ExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddStorageToArchive(System.Guid IdStorage, System.Guid IdArchive, bool Enable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/EnableDisableStorageToArchi" +
            "ve", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/EnableDisableStorageToArchi" +
            "veResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/EnableDisableStorageToArchi" +
            "veBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void EnableDisableStorageToArchive(System.Guid IdStorage, System.Guid IdArchive, bool Enable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageRuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageRuleBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddStorageRule(BiblosDS.Library.Common.Objects.DocumentStorageRule StorageRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageRuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageRuleBiblosDsEx" +
            "ceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateStorageRule(BiblosDS.Library.Common.Objects.DocumentStorageRule StorageRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageArea", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageAreaBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddStorageArea(BiblosDS.Library.Common.Objects.DocumentStorageArea StorageArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageArea", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageAreaResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageAreaBiblosDsEx" +
            "ceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateStorageArea(BiblosDS.Library.Common.Objects.DocumentStorageArea StorageArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageAreaRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageAreaRuleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/AddStorageAreaRuleBiblosDsE" +
            "xceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void AddStorageAreaRule(BiblosDS.Library.Common.Objects.DocumentStorageAreaRule StorageAreaRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageAreaRule", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageAreaRuleRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/UpdateStorageAreaRuleBiblos" +
            "DsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateStorageAreaRule(BiblosDS.Library.Common.Objects.DocumentStorageAreaRule StorageAreaRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/DoWork", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/CloneArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/CloneArchiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/CloneArchiveBiblosDsExcepti" +
            "onFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        System.Guid CloneArchive(string templateName, string archiveName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/CloneCompanyArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/CloneCompanyArchiveResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Administration/IAdministration/CloneCompanyArchiveBiblosDs" +
            "ExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        System.Guid CloneCompanyArchive(string templateName, string archiveName, BiblosDS.Library.Common.Objects.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/CheckConnection", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/CheckConnectionResponse")]
        bool CheckConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocumentsInTransito", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocumentsInTransitoRespo" +
            "nse")]
        BiblosDS.Library.Common.Objects.Document[] GetDocumentsInTransito();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocumentsInStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetDocumentsInStorageRespon" +
            "se")]
        BiblosDS.Library.Common.Objects.Document[] GetDocumentsInStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStorages", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStoragesResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorage[] GetAllStorages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStoragesWithServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStoragesWithServerRes" +
            "ponse")]
        BiblosDS.Library.Common.Objects.DocumentStorage[] GetAllStoragesWithServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesFromArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesFromArchiveRespo" +
            "nse")]
        BiblosDS.Library.Common.Objects.DocumentStorage[] GetStoragesFromArchive(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorage GetStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageWithServer", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageWithServerRespons" +
            "e")]
        BiblosDS.Library.Common.Objects.DocumentStorage GetStorageWithServer(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreas", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreasResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreas(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreasFromStorageA" +
            "rchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreasFromStorageA" +
            "rchiveResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreasFromStorageArchive(System.Guid IdStorage, System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageArea", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageAreaResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageArea GetStorageArea(System.Guid IdStorageArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStorageAreaStatus", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAllStorageAreaStatusResp" +
            "onse")]
        BiblosDS.Library.Common.Objects.Status[] GetAllStorageAreaStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRulesFromStorageA" +
            "reaArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageRulesFromStorageA" +
            "reaArchiveResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRulesFromStorageAreaArchive(System.Guid IdStorageArea, System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesNotRelatedToArch" +
            "ive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStoragesNotRelatedToArch" +
            "iveResponse")]
        BiblosDS.Library.Common.Objects.DocumentStorage[] GetStoragesNotRelatedToArchive(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchive GetArchive(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveWithServerConfigs" +
            "", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchiveWithServerConfigs" +
            "Response")]
        BiblosDS.Library.Common.Objects.DocumentArchive GetArchiveWithServerConfigs(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchives", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchives();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesById", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesByIdResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesById(System.Guid[] idsArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesFromStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesFromStorageRespo" +
            "nse")]
        BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesFromStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesNotRelatedToStor" +
            "age", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetArchivesNotRelatedToStor" +
            "ageResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesNotRelatedToStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageArchiveRelationsF" +
            "romStorage", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageArchiveRelationsF" +
            "romStorageResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchiveStorage[] GetStorageArchiveRelationsFromStorage(System.Guid IdStorage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageArchiveRelationsF" +
            "romArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetStorageArchiveRelationsF" +
            "romArchiveResponse")]
        BiblosDS.Library.Common.Objects.DocumentArchiveStorage[] GetStorageArchiveRelationsFromArchive(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributesFromArchive", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributesFromArchiveRes" +
            "ponse")]
        BiblosDS.Library.Common.Objects.DocumentAttribute[] GetAttributesFromArchive(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttribute", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributeResponse")]
        BiblosDS.Library.Common.Objects.DocumentAttribute GetAttribute(System.Guid IdAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributeGroup", ReplyAction="http://Vecomp.BiblosDs.Administration/IAdministration/GetAttributeGroupResponse")]
        BiblosDS.Library.Common.Objects.DocumentAttributeGroup[] GetAttributeGroup(System.Guid IdArchive);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrationChannel : BiblosDS.UnitTest.WCF.ServiceReferenceAdmin.IAdministration, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrationClient : System.ServiceModel.ClientBase<BiblosDS.UnitTest.WCF.ServiceReferenceAdmin.IAdministration>, BiblosDS.UnitTest.WCF.ServiceReferenceAdmin.IAdministration {
        
        public AdministrationClient() {
        }
        
        public AdministrationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddAttribute(BiblosDS.Library.Common.Objects.DocumentAttribute DocumentAttribute) {
            base.Channel.AddAttribute(DocumentAttribute);
        }
        
        public void AddAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup) {
            base.Channel.AddAttributeGroup(AttributeGroup);
        }
        
        public void UpdateAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup) {
            base.Channel.UpdateAttributeGroup(AttributeGroup);
        }
        
        public void DeleteAttributeGroup(System.Guid IdAttributeGroup) {
            base.Channel.DeleteAttributeGroup(IdAttributeGroup);
        }
        
        public void UpdateAttribute(BiblosDS.Library.Common.Objects.DocumentAttribute DocumentAttribute) {
            base.Channel.UpdateAttribute(DocumentAttribute);
        }
        
        public void DeleteAttribute(System.Guid IdAttribute) {
            base.Channel.DeleteAttribute(IdAttribute);
        }
        
        public void UpdateStorage(BiblosDS.Library.Common.Objects.DocumentStorage storage) {
            base.Channel.UpdateStorage(storage);
        }
        
        public void UpdateArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage) {
            base.Channel.UpdateArchiveStorage(ArchiveStorage);
        }
        
        public void AddArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage) {
            base.Channel.AddArchiveStorage(ArchiveStorage);
        }
        
        public void DeleteArchiveStorage(BiblosDS.Library.Common.Objects.DocumentArchiveStorage ArchiveStorage) {
            base.Channel.DeleteArchiveStorage(ArchiveStorage);
        }
        
        public void AddDocumentAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup) {
            base.Channel.AddDocumentAttributeGroup(AttributeGroup);
        }
        
        public void UpdateDocumentAttributeGroup(BiblosDS.Library.Common.Objects.DocumentAttributeGroup AttributeGroup) {
            base.Channel.UpdateDocumentAttributeGroup(AttributeGroup);
        }
        
        public void AddArchiveCertificate(System.Guid idArchive, string userName, string pin, string fileName, byte[] certificateBlob) {
            base.Channel.AddArchiveCertificate(idArchive, userName, pin, fileName, certificateBlob);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchiveCertificate GetArchiveCertificate(System.Guid idArchive) {
            return base.Channel.GetArchiveCertificate(idArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRulesFromStorage(System.Guid IdStorage) {
            return base.Channel.GetStorageRulesFromStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageRule GetStorageRule(System.Guid IdStorage, System.Guid IdAttribute) {
            return base.Channel.GetStorageRule(IdStorage, IdAttribute);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRules(System.Guid IdStorage, System.Guid IdArchive) {
            return base.Channel.GetStorageRules(IdStorage, IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageType[] GetStoragesType() {
            return base.Channel.GetStoragesType();
        }
        
        public BiblosDS.Library.Common.Objects.Document GetDocument(System.Guid IdDocument) {
            return base.Channel.GetDocument(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttributeMode[] GetAttributeModes() {
            return base.Channel.GetAttributeModes();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageAreaRule[] GetStorageAreaRuleFromStorageArea(System.Guid IdStorageArea) {
            return base.Channel.GetStorageAreaRuleFromStorageArea(IdStorageArea);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageAreaRule GetStorageAreaRule(System.Guid IdStorageArea, System.Guid IdAttribute) {
            return base.Channel.GetStorageAreaRule(IdStorageArea, IdAttribute);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentRuleOperator[] GetRuleOperators() {
            return base.Channel.GetRuleOperators();
        }
        
        public string[] GetPreservationFiscalDocumentsTypes() {
            return base.Channel.GetPreservationFiscalDocumentsTypes();
        }
        
        public BiblosDS.Library.Common.Objects.Server[] GetServers() {
            return base.Channel.GetServers();
        }
        
        public BiblosDS.Library.Common.Objects.Server GetServer(System.Guid serverId) {
            return base.Channel.GetServer(serverId);
        }
        
        public BiblosDS.Library.Common.Objects.Server UpdateServer(BiblosDS.Library.Common.Objects.Server server) {
            return base.Channel.UpdateServer(server);
        }
        
        public BiblosDS.Library.Common.Objects.Server AddServer(BiblosDS.Library.Common.Objects.Server server) {
            return base.Channel.AddServer(server);
        }
        
        public bool DeleteServer(BiblosDS.Library.Common.Objects.Server server) {
            return base.Channel.DeleteServer(server);
        }
        
        public BiblosDS.Library.Common.Objects.ArchiveServerConfig AddArchiveServerConfig(BiblosDS.Library.Common.Objects.ArchiveServerConfig config) {
            return base.Channel.AddArchiveServerConfig(config);
        }
        
        public void DeleteArchiveServerConfig(BiblosDS.Library.Common.Objects.ArchiveServerConfig config) {
            base.Channel.DeleteArchiveServerConfig(config);
        }
        
        public void AddStorage(BiblosDS.Library.Common.Objects.DocumentStorage Storage) {
            base.Channel.AddStorage(Storage);
        }
        
        public System.Guid AddArchive(BiblosDS.Library.Common.Objects.DocumentArchive Archive) {
            return base.Channel.AddArchive(Archive);
        }
        
        public void UpdateArchive(BiblosDS.Library.Common.Objects.DocumentArchive Archive) {
            base.Channel.UpdateArchive(Archive);
        }
        
        public void AddStorageToArchive(System.Guid IdStorage, System.Guid IdArchive, bool Enable) {
            base.Channel.AddStorageToArchive(IdStorage, IdArchive, Enable);
        }
        
        public void EnableDisableStorageToArchive(System.Guid IdStorage, System.Guid IdArchive, bool Enable) {
            base.Channel.EnableDisableStorageToArchive(IdStorage, IdArchive, Enable);
        }
        
        public void AddStorageRule(BiblosDS.Library.Common.Objects.DocumentStorageRule StorageRule) {
            base.Channel.AddStorageRule(StorageRule);
        }
        
        public void UpdateStorageRule(BiblosDS.Library.Common.Objects.DocumentStorageRule StorageRule) {
            base.Channel.UpdateStorageRule(StorageRule);
        }
        
        public void AddStorageArea(BiblosDS.Library.Common.Objects.DocumentStorageArea StorageArea) {
            base.Channel.AddStorageArea(StorageArea);
        }
        
        public void UpdateStorageArea(BiblosDS.Library.Common.Objects.DocumentStorageArea StorageArea) {
            base.Channel.UpdateStorageArea(StorageArea);
        }
        
        public void AddStorageAreaRule(BiblosDS.Library.Common.Objects.DocumentStorageAreaRule StorageAreaRule) {
            base.Channel.AddStorageAreaRule(StorageAreaRule);
        }
        
        public void UpdateStorageAreaRule(BiblosDS.Library.Common.Objects.DocumentStorageAreaRule StorageAreaRule) {
            base.Channel.UpdateStorageAreaRule(StorageAreaRule);
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Guid CloneArchive(string templateName, string archiveName) {
            return base.Channel.CloneArchive(templateName, archiveName);
        }
        
        public System.Guid CloneCompanyArchive(string templateName, string archiveName, BiblosDS.Library.Common.Objects.Company company) {
            return base.Channel.CloneCompanyArchive(templateName, archiveName, company);
        }
        
        public bool CheckConnection() {
            return base.Channel.CheckConnection();
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetDocumentsInTransito() {
            return base.Channel.GetDocumentsInTransito();
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetDocumentsInStorage(System.Guid IdStorage) {
            return base.Channel.GetDocumentsInStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage[] GetAllStorages() {
            return base.Channel.GetAllStorages();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage[] GetAllStoragesWithServer() {
            return base.Channel.GetAllStoragesWithServer();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage[] GetStoragesFromArchive(System.Guid IdArchive) {
            return base.Channel.GetStoragesFromArchive(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage GetStorage(System.Guid IdStorage) {
            return base.Channel.GetStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage GetStorageWithServer(System.Guid IdStorage) {
            return base.Channel.GetStorageWithServer(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreas(System.Guid IdStorage) {
            return base.Channel.GetStorageAreas(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreasFromStorageArchive(System.Guid IdStorage, System.Guid IdArchive) {
            return base.Channel.GetStorageAreasFromStorageArchive(IdStorage, IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageArea GetStorageArea(System.Guid IdStorageArea) {
            return base.Channel.GetStorageArea(IdStorageArea);
        }
        
        public BiblosDS.Library.Common.Objects.Status[] GetAllStorageAreaStatus() {
            return base.Channel.GetAllStorageAreaStatus();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageRule[] GetStorageRulesFromStorageAreaArchive(System.Guid IdStorageArea, System.Guid IdArchive) {
            return base.Channel.GetStorageRulesFromStorageAreaArchive(IdStorageArea, IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage[] GetStoragesNotRelatedToArchive(System.Guid IdArchive) {
            return base.Channel.GetStoragesNotRelatedToArchive(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive GetArchive(System.Guid IdArchive) {
            return base.Channel.GetArchive(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive GetArchiveWithServerConfigs(System.Guid IdArchive) {
            return base.Channel.GetArchiveWithServerConfigs(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchives() {
            return base.Channel.GetArchives();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesById(System.Guid[] idsArchive) {
            return base.Channel.GetArchivesById(idsArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesFromStorage(System.Guid IdStorage) {
            return base.Channel.GetArchivesFromStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchivesNotRelatedToStorage(System.Guid IdStorage) {
            return base.Channel.GetArchivesNotRelatedToStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchiveStorage[] GetStorageArchiveRelationsFromStorage(System.Guid IdStorage) {
            return base.Channel.GetStorageArchiveRelationsFromStorage(IdStorage);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchiveStorage[] GetStorageArchiveRelationsFromArchive(System.Guid IdArchive) {
            return base.Channel.GetStorageArchiveRelationsFromArchive(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttribute[] GetAttributesFromArchive(System.Guid IdArchive) {
            return base.Channel.GetAttributesFromArchive(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttribute GetAttribute(System.Guid IdAttribute) {
            return base.Channel.GetAttribute(IdAttribute);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttributeGroup[] GetAttributeGroup(System.Guid IdArchive) {
            return base.Channel.GetAttributeGroup(IdArchive);
        }
    }
}
