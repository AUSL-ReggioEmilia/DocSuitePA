//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BiblosDS.UnitTest.WebService.eSign {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eSignEngineSoap", Namespace="http://www.vecompsoftware.it/eSignEngine/")]
    public partial class eSignEngine : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExtractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback P7xTimeStampDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback P7mSoftSignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpiryDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeStampCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eSignEngine() {
            this.Url = global::BiblosDS.UnitTest.WebService.Properties.Settings.Default.BiblosDS_UnitTest_WebService_eSign_eSignEngine;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExtractCompletedEventHandler ExtractCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        public event P7xTimeStampDocumentCompletedEventHandler P7xTimeStampDocumentCompleted;
        
        /// <remarks/>
        public event P7mSoftSignCompletedEventHandler P7mSoftSignCompleted;
        
        /// <remarks/>
        public event GetExpiryDatesCompletedEventHandler GetExpiryDatesCompleted;
        
        /// <remarks/>
        public event GetTimeStampCountCompletedEventHandler GetTimeStampCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/Extract", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Extract(bool isP7M, string c64P7BlobFile, out string c64FileBlob, out string MetaData) {
            object[] results = this.Invoke("Extract", new object[] {
                        isP7M,
                        c64P7BlobFile});
            c64FileBlob = ((string)(results[1]));
            MetaData = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExtractAsync(bool isP7M, string c64P7BlobFile) {
            this.ExtractAsync(isP7M, c64P7BlobFile, null);
        }
        
        /// <remarks/>
        public void ExtractAsync(bool isP7M, string c64P7BlobFile, object userState) {
            if ((this.ExtractOperationCompleted == null)) {
                this.ExtractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractOperationCompleted);
            }
            this.InvokeAsync("Extract", new object[] {
                        isP7M,
                        c64P7BlobFile}, this.ExtractOperationCompleted, userState);
        }
        
        private void OnExtractOperationCompleted(object arg) {
            if ((this.ExtractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractCompleted(this, new ExtractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/GetFileInfo", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFileInfo(string format, string c64P7BlobFile, out string MetaData) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        format,
                        c64P7BlobFile});
            MetaData = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string format, string c64P7BlobFile) {
            this.GetFileInfoAsync(format, c64P7BlobFile, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string format, string c64P7BlobFile, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        format,
                        c64P7BlobFile}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/P7xTimeStampDocument", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string P7xTimeStampDocument(int InfoCamereFormat, string c64FileName, string c64P7kBlobFile) {
            object[] results = this.Invoke("P7xTimeStampDocument", new object[] {
                        InfoCamereFormat,
                        c64FileName,
                        c64P7kBlobFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void P7xTimeStampDocumentAsync(int InfoCamereFormat, string c64FileName, string c64P7kBlobFile) {
            this.P7xTimeStampDocumentAsync(InfoCamereFormat, c64FileName, c64P7kBlobFile, null);
        }
        
        /// <remarks/>
        public void P7xTimeStampDocumentAsync(int InfoCamereFormat, string c64FileName, string c64P7kBlobFile, object userState) {
            if ((this.P7xTimeStampDocumentOperationCompleted == null)) {
                this.P7xTimeStampDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnP7xTimeStampDocumentOperationCompleted);
            }
            this.InvokeAsync("P7xTimeStampDocument", new object[] {
                        InfoCamereFormat,
                        c64FileName,
                        c64P7kBlobFile}, this.P7xTimeStampDocumentOperationCompleted, userState);
        }
        
        private void OnP7xTimeStampDocumentOperationCompleted(object arg) {
            if ((this.P7xTimeStampDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.P7xTimeStampDocumentCompleted(this, new P7xTimeStampDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/P7mSoftSign", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string P7mSoftSign(string CertificateName, string c64FileName, string SignDate, string Description, string c64BlobFile) {
            object[] results = this.Invoke("P7mSoftSign", new object[] {
                        CertificateName,
                        c64FileName,
                        SignDate,
                        Description,
                        c64BlobFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void P7mSoftSignAsync(string CertificateName, string c64FileName, string SignDate, string Description, string c64BlobFile) {
            this.P7mSoftSignAsync(CertificateName, c64FileName, SignDate, Description, c64BlobFile, null);
        }
        
        /// <remarks/>
        public void P7mSoftSignAsync(string CertificateName, string c64FileName, string SignDate, string Description, string c64BlobFile, object userState) {
            if ((this.P7mSoftSignOperationCompleted == null)) {
                this.P7mSoftSignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnP7mSoftSignOperationCompleted);
            }
            this.InvokeAsync("P7mSoftSign", new object[] {
                        CertificateName,
                        c64FileName,
                        SignDate,
                        Description,
                        c64BlobFile}, this.P7mSoftSignOperationCompleted, userState);
        }
        
        private void OnP7mSoftSignOperationCompleted(object arg) {
            if ((this.P7mSoftSignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.P7mSoftSignCompleted(this, new P7mSoftSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/GetExpiryDates", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpiryDates(string fileName, string encObj, out SimplyCert firstExpCertificate) {
            object[] results = this.Invoke("GetExpiryDates", new object[] {
                        fileName,
                        encObj});
            firstExpCertificate = ((SimplyCert)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpiryDatesAsync(string fileName, string encObj) {
            this.GetExpiryDatesAsync(fileName, encObj, null);
        }
        
        /// <remarks/>
        public void GetExpiryDatesAsync(string fileName, string encObj, object userState) {
            if ((this.GetExpiryDatesOperationCompleted == null)) {
                this.GetExpiryDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpiryDatesOperationCompleted);
            }
            this.InvokeAsync("GetExpiryDates", new object[] {
                        fileName,
                        encObj}, this.GetExpiryDatesOperationCompleted, userState);
        }
        
        private void OnGetExpiryDatesOperationCompleted(object arg) {
            if ((this.GetExpiryDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpiryDatesCompleted(this, new GetExpiryDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/eSignEngine/GetTimeStampCount", RequestNamespace="http://www.vecompsoftware.it/eSignEngine/", ResponseNamespace="http://www.vecompsoftware.it/eSignEngine/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTimeStampCount(string service, string user, string password) {
            object[] results = this.Invoke("GetTimeStampCount", new object[] {
                        service,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeStampCountAsync(string service, string user, string password) {
            this.GetTimeStampCountAsync(service, user, password, null);
        }
        
        /// <remarks/>
        public void GetTimeStampCountAsync(string service, string user, string password, object userState) {
            if ((this.GetTimeStampCountOperationCompleted == null)) {
                this.GetTimeStampCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeStampCountOperationCompleted);
            }
            this.InvokeAsync("GetTimeStampCount", new object[] {
                        service,
                        user,
                        password}, this.GetTimeStampCountOperationCompleted, userState);
        }
        
        private void OnGetTimeStampCountOperationCompleted(object arg) {
            if ((this.GetTimeStampCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeStampCountCompleted(this, new GetTimeStampCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vecompsoftware.it/eSignEngine/")]
    public partial class SimplyCert {
        
        private int levelField;
        
        private string idField;
        
        private string typeField;
        
        private string nameField;
        
        private string fiscalCodeField;
        
        private string roleField;
        
        private string descriptionField;
        
        private string issuerField;
        
        private string eMailField;
        
        private System.DateTime expiryField;
        
        private System.DateTime validFromField;
        
        private string revokedDateField;
        
        private string revokedReasonField;
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FiscalCode {
            get {
                return this.fiscalCodeField;
            }
            set {
                this.fiscalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Issuer {
            get {
                return this.issuerField;
            }
            set {
                this.issuerField = value;
            }
        }
        
        /// <remarks/>
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ValidFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
            }
        }
        
        /// <remarks/>
        public string RevokedDate {
            get {
                return this.revokedDateField;
            }
            set {
                this.revokedDateField = value;
            }
        }
        
        /// <remarks/>
        public string RevokedReason {
            get {
                return this.revokedReasonField;
            }
            set {
                this.revokedReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ExtractCompletedEventHandler(object sender, ExtractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string c64FileBlob {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string MetaData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MetaData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void P7xTimeStampDocumentCompletedEventHandler(object sender, P7xTimeStampDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class P7xTimeStampDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal P7xTimeStampDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void P7mSoftSignCompletedEventHandler(object sender, P7mSoftSignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class P7mSoftSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal P7mSoftSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetExpiryDatesCompletedEventHandler(object sender, GetExpiryDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpiryDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpiryDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SimplyCert firstExpCertificate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimplyCert)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetTimeStampCountCompletedEventHandler(object sender, GetTimeStampCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeStampCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeStampCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591