//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BiblosDS.UnitTest.WebService.WebReferenceCompatibility {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BiblosWS2010Soap", Namespace="http://www.vecompsoftware.it/BiblosDSWS/")]
    public partial class BiblosWS2010 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetChainInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentInfoSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentHeadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentHeadedExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDirectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocumentExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDocumentB2kOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetaDataDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMetaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback P7MGetExpDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback P7MGetAllExpDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASDetachDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsHashOperationCompleted;
        
        private System.Threading.SendOrPostCallback P7MAddRawSignatureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BiblosWS2010() {
            this.Url = global::BiblosDS.UnitTest.WebService.Properties.Settings.Default.BiblosDS_UnitTest_WebService_WebReferenceCompatibility_BiblosCompatibility;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetChainInfoCompletedEventHandler GetChainInfoCompleted;
        
        /// <remarks/>
        public event GetDocumentInfoCompletedEventHandler GetDocumentInfoCompleted;
        
        /// <remarks/>
        public event GetDocumentInfoSearchCompletedEventHandler GetDocumentInfoSearchCompleted;
        
        /// <remarks/>
        public event GetDocumentHeadedCompletedEventHandler GetDocumentHeadedCompleted;
        
        /// <remarks/>
        public event GetDocumentHeadedExCompletedEventHandler GetDocumentHeadedExCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentDirectCompletedEventHandler GetDocumentDirectCompleted;
        
        /// <remarks/>
        public event AddDocumentCompletedEventHandler AddDocumentCompleted;
        
        /// <remarks/>
        public event AddDocumentExtCompletedEventHandler AddDocumentExtCompleted;
        
        /// <remarks/>
        public event ModifyDocumentCompletedEventHandler ModifyDocumentCompleted;
        
        /// <remarks/>
        public event UpdateDocumentKeyCompletedEventHandler UpdateDocumentKeyCompleted;
        
        /// <remarks/>
        public event UpdateDocumentMetadataCompletedEventHandler UpdateDocumentMetadataCompleted;
        
        /// <remarks/>
        public event ModifyDocumentB2kCompletedEventHandler ModifyDocumentB2kCompleted;
        
        /// <remarks/>
        public event GetMetaDataDefinitionCompletedEventHandler GetMetaDataDefinitionCompleted;
        
        /// <remarks/>
        public event CheckMetaDataCompletedEventHandler CheckMetaDataCompleted;
        
        /// <remarks/>
        public event P7MGetExpDateCompletedEventHandler P7MGetExpDateCompleted;
        
        /// <remarks/>
        public event P7MGetAllExpDateCompletedEventHandler P7MGetAllExpDateCompleted;
        
        /// <remarks/>
        public event ASDetachDocumentCompletedEventHandler ASDetachDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentsHashCompletedEventHandler GetDocumentsHashCompleted;
        
        /// <remarks/>
        public event P7MAddRawSignatureCompletedEventHandler P7MAddRawSignatureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetChainInfo", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChainInfo(string Server, string DataBase, int Chain) {
            object[] results = this.Invoke("GetChainInfo", new object[] {
                        Server,
                        DataBase,
                        Chain});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChainInfoAsync(string Server, string DataBase, int Chain) {
            this.GetChainInfoAsync(Server, DataBase, Chain, null);
        }
        
        /// <remarks/>
        public void GetChainInfoAsync(string Server, string DataBase, int Chain, object userState) {
            if ((this.GetChainInfoOperationCompleted == null)) {
                this.GetChainInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChainInfoOperationCompleted);
            }
            this.InvokeAsync("GetChainInfo", new object[] {
                        Server,
                        DataBase,
                        Chain}, this.GetChainInfoOperationCompleted, userState);
        }
        
        private void OnGetChainInfoOperationCompleted(object arg) {
            if ((this.GetChainInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChainInfoCompleted(this, new GetChainInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentInfo", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDocumentInfo(string Server, string DataBase, int Chain, int Enum) {
            object[] results = this.Invoke("GetDocumentInfo", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentInfoAsync(string Server, string DataBase, int Chain, int Enum) {
            this.GetDocumentInfoAsync(Server, DataBase, Chain, Enum, null);
        }
        
        /// <remarks/>
        public void GetDocumentInfoAsync(string Server, string DataBase, int Chain, int Enum, object userState) {
            if ((this.GetDocumentInfoOperationCompleted == null)) {
                this.GetDocumentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentInfoOperationCompleted);
            }
            this.InvokeAsync("GetDocumentInfo", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum}, this.GetDocumentInfoOperationCompleted, userState);
        }
        
        private void OnGetDocumentInfoOperationCompleted(object arg) {
            if ((this.GetDocumentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentInfoCompleted(this, new GetDocumentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentInfoSearch", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDocumentInfoSearch(string Server, string DataBase, string Attr, string Value) {
            object[] results = this.Invoke("GetDocumentInfoSearch", new object[] {
                        Server,
                        DataBase,
                        Attr,
                        Value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentInfoSearchAsync(string Server, string DataBase, string Attr, string Value) {
            this.GetDocumentInfoSearchAsync(Server, DataBase, Attr, Value, null);
        }
        
        /// <remarks/>
        public void GetDocumentInfoSearchAsync(string Server, string DataBase, string Attr, string Value, object userState) {
            if ((this.GetDocumentInfoSearchOperationCompleted == null)) {
                this.GetDocumentInfoSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentInfoSearchOperationCompleted);
            }
            this.InvokeAsync("GetDocumentInfoSearch", new object[] {
                        Server,
                        DataBase,
                        Attr,
                        Value}, this.GetDocumentInfoSearchOperationCompleted, userState);
        }
        
        private void OnGetDocumentInfoSearchOperationCompleted(object arg) {
            if ((this.GetDocumentInfoSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentInfoSearchCompleted(this, new GetDocumentInfoSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentHeaded", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public stDoc GetDocumentHeaded(string Server, string DataBase, int Chain, int Enum, string XmlLabel) {
            object[] results = this.Invoke("GetDocumentHeaded", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        XmlLabel});
            return ((stDoc)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHeadedAsync(string Server, string DataBase, int Chain, int Enum, string XmlLabel) {
            this.GetDocumentHeadedAsync(Server, DataBase, Chain, Enum, XmlLabel, null);
        }
        
        /// <remarks/>
        public void GetDocumentHeadedAsync(string Server, string DataBase, int Chain, int Enum, string XmlLabel, object userState) {
            if ((this.GetDocumentHeadedOperationCompleted == null)) {
                this.GetDocumentHeadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHeadedOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHeaded", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        XmlLabel}, this.GetDocumentHeadedOperationCompleted, userState);
        }
        
        private void OnGetDocumentHeadedOperationCompleted(object arg) {
            if ((this.GetDocumentHeadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHeadedCompleted(this, new GetDocumentHeadedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentHeadedEx", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public stDoc GetDocumentHeadedEx(string Server, string DataBase, int Chain, int Enum, string FileFormat, string XmlLabel) {
            object[] results = this.Invoke("GetDocumentHeadedEx", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        FileFormat,
                        XmlLabel});
            return ((stDoc)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHeadedExAsync(string Server, string DataBase, int Chain, int Enum, string FileFormat, string XmlLabel) {
            this.GetDocumentHeadedExAsync(Server, DataBase, Chain, Enum, FileFormat, XmlLabel, null);
        }
        
        /// <remarks/>
        public void GetDocumentHeadedExAsync(string Server, string DataBase, int Chain, int Enum, string FileFormat, string XmlLabel, object userState) {
            if ((this.GetDocumentHeadedExOperationCompleted == null)) {
                this.GetDocumentHeadedExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHeadedExOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHeadedEx", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        FileFormat,
                        XmlLabel}, this.GetDocumentHeadedExOperationCompleted, userState);
        }
        
        private void OnGetDocumentHeadedExOperationCompleted(object arg) {
            if ((this.GetDocumentHeadedExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHeadedExCompleted(this, new GetDocumentHeadedExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocument", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public stDoc GetDocument(string Server, string DataBase, int Chain, int Enum) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum});
            return ((stDoc)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string Server, string DataBase, int Chain, int Enum) {
            this.GetDocumentAsync(Server, DataBase, Chain, Enum, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string Server, string DataBase, int Chain, int Enum, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentDirect", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public stDoc GetDocumentDirect(string Server, string DataBase, int Chain, int Enum) {
            object[] results = this.Invoke("GetDocumentDirect", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum});
            return ((stDoc)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDirectAsync(string Server, string DataBase, int Chain, int Enum) {
            this.GetDocumentDirectAsync(Server, DataBase, Chain, Enum, null);
        }
        
        /// <remarks/>
        public void GetDocumentDirectAsync(string Server, string DataBase, int Chain, int Enum, object userState) {
            if ((this.GetDocumentDirectOperationCompleted == null)) {
                this.GetDocumentDirectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDirectOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDirect", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum}, this.GetDocumentDirectOperationCompleted, userState);
        }
        
        private void OnGetDocumentDirectOperationCompleted(object arg) {
            if ((this.GetDocumentDirectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDirectCompleted(this, new GetDocumentDirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/AddDocument", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddDocument(string Server, string DataBase, int Chain, stDoc Doc) {
            object[] results = this.Invoke("AddDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Doc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocumentAsync(string Server, string DataBase, int Chain, stDoc Doc) {
            this.AddDocumentAsync(Server, DataBase, Chain, Doc, null);
        }
        
        /// <remarks/>
        public void AddDocumentAsync(string Server, string DataBase, int Chain, stDoc Doc, object userState) {
            if ((this.AddDocumentOperationCompleted == null)) {
                this.AddDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocumentOperationCompleted);
            }
            this.InvokeAsync("AddDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Doc}, this.AddDocumentOperationCompleted, userState);
        }
        
        private void OnAddDocumentOperationCompleted(object arg) {
            if ((this.AddDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocumentCompleted(this, new AddDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/AddDocumentExt", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddDocumentExt(string Server, string DataBase, int Chain, string DocFileExt, string DocXmlVal, string DocBlob) {
            object[] results = this.Invoke("AddDocumentExt", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        DocFileExt,
                        DocXmlVal,
                        DocBlob});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocumentExtAsync(string Server, string DataBase, int Chain, string DocFileExt, string DocXmlVal, string DocBlob) {
            this.AddDocumentExtAsync(Server, DataBase, Chain, DocFileExt, DocXmlVal, DocBlob, null);
        }
        
        /// <remarks/>
        public void AddDocumentExtAsync(string Server, string DataBase, int Chain, string DocFileExt, string DocXmlVal, string DocBlob, object userState) {
            if ((this.AddDocumentExtOperationCompleted == null)) {
                this.AddDocumentExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocumentExtOperationCompleted);
            }
            this.InvokeAsync("AddDocumentExt", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        DocFileExt,
                        DocXmlVal,
                        DocBlob}, this.AddDocumentExtOperationCompleted, userState);
        }
        
        private void OnAddDocumentExtOperationCompleted(object arg) {
            if ((this.AddDocumentExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocumentExtCompleted(this, new AddDocumentExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/ModifyDocument", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyDocument(string Server, string DataBase, int Chain, int Enum, string XmlMetaData, int Visible) {
            object[] results = this.Invoke("ModifyDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        XmlMetaData,
                        Visible});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyDocumentAsync(string Server, string DataBase, int Chain, int Enum, string XmlMetaData, int Visible) {
            this.ModifyDocumentAsync(Server, DataBase, Chain, Enum, XmlMetaData, Visible, null);
        }
        
        /// <remarks/>
        public void ModifyDocumentAsync(string Server, string DataBase, int Chain, int Enum, string XmlMetaData, int Visible, object userState) {
            if ((this.ModifyDocumentOperationCompleted == null)) {
                this.ModifyDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDocumentOperationCompleted);
            }
            this.InvokeAsync("ModifyDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        XmlMetaData,
                        Visible}, this.ModifyDocumentOperationCompleted, userState);
        }
        
        private void OnModifyDocumentOperationCompleted(object arg) {
            if ((this.ModifyDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDocumentCompleted(this, new ModifyDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/UpdateDocumentKey", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDocumentKey(string Server, string DataBase, int Chain, int Enum) {
            object[] results = this.Invoke("UpdateDocumentKey", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentKeyAsync(string Server, string DataBase, int Chain, int Enum) {
            this.UpdateDocumentKeyAsync(Server, DataBase, Chain, Enum, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentKeyAsync(string Server, string DataBase, int Chain, int Enum, object userState) {
            if ((this.UpdateDocumentKeyOperationCompleted == null)) {
                this.UpdateDocumentKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentKeyOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentKey", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum}, this.UpdateDocumentKeyOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentKeyOperationCompleted(object arg) {
            if ((this.UpdateDocumentKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentKeyCompleted(this, new UpdateDocumentKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/UpdateDocumentMetadata", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDocumentMetadata(string Server, string DataBase, int Chain, int Enum, string Name, string Value) {
            object[] results = this.Invoke("UpdateDocumentMetadata", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        Name,
                        Value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDocumentMetadataAsync(string Server, string DataBase, int Chain, int Enum, string Name, string Value) {
            this.UpdateDocumentMetadataAsync(Server, DataBase, Chain, Enum, Name, Value, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentMetadataAsync(string Server, string DataBase, int Chain, int Enum, string Name, string Value, object userState) {
            if ((this.UpdateDocumentMetadataOperationCompleted == null)) {
                this.UpdateDocumentMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentMetadataOperationCompleted);
            }
            this.InvokeAsync("UpdateDocumentMetadata", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        Name,
                        Value}, this.UpdateDocumentMetadataOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentMetadataOperationCompleted(object arg) {
            if ((this.UpdateDocumentMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentMetadataCompleted(this, new UpdateDocumentMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/ModifyDocumentB2k", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyDocumentB2k(string Server, string DataBase, int Chain, int Enum, string FileName, string Blob) {
            object[] results = this.Invoke("ModifyDocumentB2k", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        FileName,
                        Blob});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyDocumentB2kAsync(string Server, string DataBase, int Chain, int Enum, string FileName, string Blob) {
            this.ModifyDocumentB2kAsync(Server, DataBase, Chain, Enum, FileName, Blob, null);
        }
        
        /// <remarks/>
        public void ModifyDocumentB2kAsync(string Server, string DataBase, int Chain, int Enum, string FileName, string Blob, object userState) {
            if ((this.ModifyDocumentB2kOperationCompleted == null)) {
                this.ModifyDocumentB2kOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDocumentB2kOperationCompleted);
            }
            this.InvokeAsync("ModifyDocumentB2k", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum,
                        FileName,
                        Blob}, this.ModifyDocumentB2kOperationCompleted, userState);
        }
        
        private void OnModifyDocumentB2kOperationCompleted(object arg) {
            if ((this.ModifyDocumentB2kCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDocumentB2kCompleted(this, new ModifyDocumentB2kCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetMetaDataDefinition", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMetaDataDefinition(string Server, string DataBase) {
            object[] results = this.Invoke("GetMetaDataDefinition", new object[] {
                        Server,
                        DataBase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetaDataDefinitionAsync(string Server, string DataBase) {
            this.GetMetaDataDefinitionAsync(Server, DataBase, null);
        }
        
        /// <remarks/>
        public void GetMetaDataDefinitionAsync(string Server, string DataBase, object userState) {
            if ((this.GetMetaDataDefinitionOperationCompleted == null)) {
                this.GetMetaDataDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetaDataDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetMetaDataDefinition", new object[] {
                        Server,
                        DataBase}, this.GetMetaDataDefinitionOperationCompleted, userState);
        }
        
        private void OnGetMetaDataDefinitionOperationCompleted(object arg) {
            if ((this.GetMetaDataDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetaDataDefinitionCompleted(this, new GetMetaDataDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/CheckMetaData", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckMetaData(string Server, string DataBase, string XmlMetaData) {
            object[] results = this.Invoke("CheckMetaData", new object[] {
                        Server,
                        DataBase,
                        XmlMetaData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMetaDataAsync(string Server, string DataBase, string XmlMetaData) {
            this.CheckMetaDataAsync(Server, DataBase, XmlMetaData, null);
        }
        
        /// <remarks/>
        public void CheckMetaDataAsync(string Server, string DataBase, string XmlMetaData, object userState) {
            if ((this.CheckMetaDataOperationCompleted == null)) {
                this.CheckMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMetaDataOperationCompleted);
            }
            this.InvokeAsync("CheckMetaData", new object[] {
                        Server,
                        DataBase,
                        XmlMetaData}, this.CheckMetaDataOperationCompleted, userState);
        }
        
        private void OnCheckMetaDataOperationCompleted(object arg) {
            if ((this.CheckMetaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMetaDataCompleted(this, new CheckMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/P7MGetExpDate", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string P7MGetExpDate(string fileName, string encObj, out SimplyCert firstExp) {
            object[] results = this.Invoke("P7MGetExpDate", new object[] {
                        fileName,
                        encObj});
            firstExp = ((SimplyCert)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void P7MGetExpDateAsync(string fileName, string encObj) {
            this.P7MGetExpDateAsync(fileName, encObj, null);
        }
        
        /// <remarks/>
        public void P7MGetExpDateAsync(string fileName, string encObj, object userState) {
            if ((this.P7MGetExpDateOperationCompleted == null)) {
                this.P7MGetExpDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnP7MGetExpDateOperationCompleted);
            }
            this.InvokeAsync("P7MGetExpDate", new object[] {
                        fileName,
                        encObj}, this.P7MGetExpDateOperationCompleted, userState);
        }
        
        private void OnP7MGetExpDateOperationCompleted(object arg) {
            if ((this.P7MGetExpDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.P7MGetExpDateCompleted(this, new P7MGetExpDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/P7MGetAllExpDate", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string P7MGetAllExpDate(string fileName, string encObj, out SimplyCert firstExp) {
            object[] results = this.Invoke("P7MGetAllExpDate", new object[] {
                        fileName,
                        encObj});
            firstExp = ((SimplyCert)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void P7MGetAllExpDateAsync(string fileName, string encObj) {
            this.P7MGetAllExpDateAsync(fileName, encObj, null);
        }
        
        /// <remarks/>
        public void P7MGetAllExpDateAsync(string fileName, string encObj, object userState) {
            if ((this.P7MGetAllExpDateOperationCompleted == null)) {
                this.P7MGetAllExpDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnP7MGetAllExpDateOperationCompleted);
            }
            this.InvokeAsync("P7MGetAllExpDate", new object[] {
                        fileName,
                        encObj}, this.P7MGetAllExpDateOperationCompleted, userState);
        }
        
        private void OnP7MGetAllExpDateOperationCompleted(object arg) {
            if ((this.P7MGetAllExpDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.P7MGetAllExpDateCompleted(this, new P7MGetAllExpDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/ASDetachDocument", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ASDetachDocument(string Server, string DataBase, int Chain, int Enum) {
            object[] results = this.Invoke("ASDetachDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ASDetachDocumentAsync(string Server, string DataBase, int Chain, int Enum) {
            this.ASDetachDocumentAsync(Server, DataBase, Chain, Enum, null);
        }
        
        /// <remarks/>
        public void ASDetachDocumentAsync(string Server, string DataBase, int Chain, int Enum, object userState) {
            if ((this.ASDetachDocumentOperationCompleted == null)) {
                this.ASDetachDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnASDetachDocumentOperationCompleted);
            }
            this.InvokeAsync("ASDetachDocument", new object[] {
                        Server,
                        DataBase,
                        Chain,
                        Enum}, this.ASDetachDocumentOperationCompleted, userState);
        }
        
        private void OnASDetachDocumentOperationCompleted(object arg) {
            if ((this.ASDetachDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASDetachDocumentCompleted(this, new ASDetachDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/GetDocumentsHash", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDocumentsHash(string Server, string Archive, string[] ChainCommaDoc) {
            object[] results = this.Invoke("GetDocumentsHash", new object[] {
                        Server,
                        Archive,
                        ChainCommaDoc});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsHashAsync(string Server, string Archive, string[] ChainCommaDoc) {
            this.GetDocumentsHashAsync(Server, Archive, ChainCommaDoc, null);
        }
        
        /// <remarks/>
        public void GetDocumentsHashAsync(string Server, string Archive, string[] ChainCommaDoc, object userState) {
            if ((this.GetDocumentsHashOperationCompleted == null)) {
                this.GetDocumentsHashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsHashOperationCompleted);
            }
            this.InvokeAsync("GetDocumentsHash", new object[] {
                        Server,
                        Archive,
                        ChainCommaDoc}, this.GetDocumentsHashOperationCompleted, userState);
        }
        
        private void OnGetDocumentsHashOperationCompleted(object arg) {
            if ((this.GetDocumentsHashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsHashCompleted(this, new GetDocumentsHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vecompsoftware.it/BiblosDSWS/P7MAddRawSignature", RequestNamespace="http://www.vecompsoftware.it/BiblosDSWS/", ResponseNamespace="http://www.vecompsoftware.it/BiblosDSWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] P7MAddRawSignature(string SrcServer, string SrcArchive, string[] ChainDocFiletypeDigest, string DesServer, string DesArchive, string signer_cert) {
            object[] results = this.Invoke("P7MAddRawSignature", new object[] {
                        SrcServer,
                        SrcArchive,
                        ChainDocFiletypeDigest,
                        DesServer,
                        DesArchive,
                        signer_cert});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void P7MAddRawSignatureAsync(string SrcServer, string SrcArchive, string[] ChainDocFiletypeDigest, string DesServer, string DesArchive, string signer_cert) {
            this.P7MAddRawSignatureAsync(SrcServer, SrcArchive, ChainDocFiletypeDigest, DesServer, DesArchive, signer_cert, null);
        }
        
        /// <remarks/>
        public void P7MAddRawSignatureAsync(string SrcServer, string SrcArchive, string[] ChainDocFiletypeDigest, string DesServer, string DesArchive, string signer_cert, object userState) {
            if ((this.P7MAddRawSignatureOperationCompleted == null)) {
                this.P7MAddRawSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnP7MAddRawSignatureOperationCompleted);
            }
            this.InvokeAsync("P7MAddRawSignature", new object[] {
                        SrcServer,
                        SrcArchive,
                        ChainDocFiletypeDigest,
                        DesServer,
                        DesArchive,
                        signer_cert}, this.P7MAddRawSignatureOperationCompleted, userState);
        }
        
        private void OnP7MAddRawSignatureOperationCompleted(object arg) {
            if ((this.P7MAddRawSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.P7MAddRawSignatureCompleted(this, new P7MAddRawSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vecompsoftware.it/BiblosDSWS/")]
    public partial class stDoc {
        
        private string fileExtensionField;
        
        private string blobField;
        
        private string xmlValuesField;
        
        /// <remarks/>
        public string FileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string Blob {
            get {
                return this.blobField;
            }
            set {
                this.blobField = value;
            }
        }
        
        /// <remarks/>
        public string XmlValues {
            get {
                return this.xmlValuesField;
            }
            set {
                this.xmlValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vecompsoftware.it/BiblosDSWS/")]
    public partial class SimplyCert {
        
        private int levelField;
        
        private string typeField;
        
        private string nameField;
        
        private string fiscalCodeField;
        
        private string roleField;
        
        private string descriptionField;
        
        private string issuerField;
        
        private string eMailField;
        
        private System.DateTime expiryField;
        
        private System.DateTime validFromField;
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FiscalCode {
            get {
                return this.fiscalCodeField;
            }
            set {
                this.fiscalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Issuer {
            get {
                return this.issuerField;
            }
            set {
                this.issuerField = value;
            }
        }
        
        /// <remarks/>
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ValidFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetChainInfoCompletedEventHandler(object sender, GetChainInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChainInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChainInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentInfoCompletedEventHandler(object sender, GetDocumentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentInfoSearchCompletedEventHandler(object sender, GetDocumentInfoSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentInfoSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentInfoSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentHeadedCompletedEventHandler(object sender, GetDocumentHeadedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHeadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHeadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stDoc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stDoc)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentHeadedExCompletedEventHandler(object sender, GetDocumentHeadedExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHeadedExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHeadedExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stDoc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stDoc)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stDoc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stDoc)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentDirectCompletedEventHandler(object sender, GetDocumentDirectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stDoc Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stDoc)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddDocumentCompletedEventHandler(object sender, AddDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddDocumentExtCompletedEventHandler(object sender, AddDocumentExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocumentExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocumentExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ModifyDocumentCompletedEventHandler(object sender, ModifyDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateDocumentKeyCompletedEventHandler(object sender, UpdateDocumentKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateDocumentMetadataCompletedEventHandler(object sender, UpdateDocumentMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDocumentMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDocumentMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ModifyDocumentB2kCompletedEventHandler(object sender, ModifyDocumentB2kCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyDocumentB2kCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyDocumentB2kCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMetaDataDefinitionCompletedEventHandler(object sender, GetMetaDataDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetaDataDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetaDataDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckMetaDataCompletedEventHandler(object sender, CheckMetaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void P7MGetExpDateCompletedEventHandler(object sender, P7MGetExpDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class P7MGetExpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal P7MGetExpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SimplyCert firstExp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimplyCert)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void P7MGetAllExpDateCompletedEventHandler(object sender, P7MGetAllExpDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class P7MGetAllExpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal P7MGetAllExpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SimplyCert firstExp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimplyCert)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ASDetachDocumentCompletedEventHandler(object sender, ASDetachDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASDetachDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASDetachDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDocumentsHashCompletedEventHandler(object sender, GetDocumentsHashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsHashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsHashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void P7MAddRawSignatureCompletedEventHandler(object sender, P7MAddRawSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class P7MAddRawSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal P7MAddRawSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591