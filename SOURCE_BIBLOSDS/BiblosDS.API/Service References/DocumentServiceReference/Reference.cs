//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblosDS.API.DocumentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vecomp.BiblosDs.Documents", ConfigurationName="DocumentServiceReference.IDocuments")]
    public interface IDocuments {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocumentBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        void UpdateDocument(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocumentName", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocumentNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/UpdateDocumentNameBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UpdateDocumentName(System.Guid idDocument, string documentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckMetaData", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckMetaDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckMetaDataBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        bool CheckMetaData(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoById", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoByIdBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Document[] GetChainInfoById(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetMetadataStructure", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetMetadataStructureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetMetadataStructureBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentAttribute[] GetMetadataStructure(System.Guid IdArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckOut", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckOutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckOutBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document DocumentCheckOut(System.Guid IdDocument, bool latestVersion, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentUndoCheckOut", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentUndoCheckOutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentUndoCheckOutBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DocumentUndoCheckOut(System.Guid IdDocument, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentAttributeCheckIn", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentAttributeCheckInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentAttributeCheckInBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        System.Guid DocumentAttributeCheckIn(BiblosDS.Library.Common.Objects.Document Document, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckIn", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentCheckInBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        System.Guid DocumentCheckIn(BiblosDS.Library.Common.Objects.Document Document, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToArchive", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToArchiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToArchiveBiblosDsExceptio" +
            "nFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DocumentMoveToArchive(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentArchive Archive, System.Nullable<bool> ForceDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToStorage", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToStorageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveToStorageBiblosDsExceptio" +
            "nFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DocumentMoveToStorage(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentStorage Storage, System.Nullable<bool> ForceDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveFromTransito", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveFromTransitoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DocumentMoveFromTransitoBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void DocumentMoveFromTransito(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/RestoreAttribute", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/RestoreAttributeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/RestoreAttributeBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void RestoreAttribute(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/SignDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/SignDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/SignDocumentBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void SignDocument(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentContent SignerCert, BiblosDS.Library.Common.Objects.DocumentContent SignedDigest, BiblosDS.Library.Common.Objects.DocumentContent Content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContent", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContentBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentContent GetDocumentContent(System.Guid idDocument, System.Nullable<decimal> version, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, System.Nullable<bool> lastVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInServer", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInServerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInServerBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document GetDocumentInServer(System.Guid idDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentConformContent", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentConformContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentConformContentBiblosDsExce" +
            "ptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentContent GetDocumentConformContent(System.Guid idDocument, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, string xmlLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfo", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfoBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Document[] GetDocumentInfo(System.Guid idDocument, System.Nullable<decimal> version, System.Nullable<bool> lastVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CreateDocumentChain", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CreateDocumentChainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CreateDocumentChainBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        System.Guid CreateDocumentChain(string archiveName, BiblosDS.Library.Common.Objects.DocumentAttributeValue[] attributeValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocumentBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool ConfirmDocument(System.Guid idDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChain", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChainBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document AddDocumentToChain(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChainPDFCrypted", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChainPDFCryptedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToChainPDFCryptedBiblosDsE" +
            "xceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document AddDocumentToChainPDFCrypted(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToMaster", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentToMasterBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.DocumentServer AddDocumentToMaster(BiblosDS.Library.Common.Objects.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentChainWithWorkflow", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentChainWithWorkflowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentChainWithWorkflowBiblosDsE" +
            "xceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document AddDocumentChainWithWorkflow(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat, string uriWorkflow);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetAttributesDefinition", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetAttributesDefinitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetAttributesDefinitionBiblosDsExcept" +
            "ionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentAttribute[] GetAttributesDefinition(string archiveName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIsReady", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIsReadyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIsReadyBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        bool CheckIsReady(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIntegrity", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIntegrityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckIntegrityBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        bool CheckIntegrity(BiblosDS.Library.Common.Objects.Document document, System.Nullable<bool> forceSign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfo", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Document[] GetChainInfo(System.Guid idChain, System.Nullable<decimal> version, System.Nullable<bool> lastVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoDetails", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetChainInfoDetailsBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Document[] GetChainInfoDetails(System.Guid idParent, System.Nullable<bool> isVisible, System.Nullable<decimal> version, System.Nullable<bool> lastVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocumentContent", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocumentContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocumentContentBiblosDsExcept" +
            "ionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentContent CheckOutDocumentContent(System.Guid idDocument, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckOutDocumentBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document CheckOutDocument(System.Guid idDocument, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, System.Nullable<bool> returnContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/UndoCheckOutDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/UndoCheckOutDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/UndoCheckOutDocumentBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void UndoCheckOutDocument(System.Guid idDocument, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckInDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/CheckInDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/CheckInDocumentBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document CheckInDocument(BiblosDS.Library.Common.Objects.Document document, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat, System.Nullable<decimal> version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchives", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchivesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchivesBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchives();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetStorages", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetStoragesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetStoragesBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentStorage[] GetStorages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetStorageAreas", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetStorageAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetStorageAreasBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreas(BiblosDS.Library.Common.Objects.DocumentStorage storage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/IsAlive", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/IsAliveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/IsAliveBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentId", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentIdBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        System.Guid GetDocumentId(string archiveName, int idBiblos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleChain", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleChainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleChainBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void SetVisibleChain(System.Guid idChain, bool visibility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocument", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocumentBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void SetVisibleDocument(System.Guid idDocument, bool visibility);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/IsDocumentSigned", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/IsDocumentSignedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/IsDocumentSignedBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool IsDocumentSigned(System.Guid idDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentSigned", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentSignedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentSignedBiblosDsExceptionFau" +
            "lt", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentCertificate[] GetDocumentSigned(System.Guid idDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentLink", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentLinkBiblosDsExceptionFault" +
            "", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool AddDocumentLink(System.Guid IdDocument, System.Guid IdDocumentLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/DeleteDocumentLink", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/DeleteDocumentLinkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/DeleteDocumentLinkBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool DeleteDocumentLink(System.Guid IdDocument, System.Guid IdDocumentLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentLinks", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentLinksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentLinksBiblosDsExceptionFaul" +
            "t", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Document[] GetDocumentLinks(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentAttach", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/AddDocumentAttachBiblosDsExceptionFau" +
            "lt", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentAttach AddDocumentAttach(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentAttach attach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocumentAttach", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocumentAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmDocumentAttachBiblosDsExceptio" +
            "nFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool ConfirmDocumentAttach(System.Guid IdDocumentAttach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachs", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachsBiblosDsExceptionFa" +
            "ult", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentAttach[] GetDocumentAttachs(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachContent", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentAttachContentBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentContent GetDocumentAttachContent(System.Guid IdDocumentAttach);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocumentAttach", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocumentAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/SetVisibleDocumentAttachBiblosDsExcep" +
            "tionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        void SetVisibleDocumentAttach(System.Guid idDocumentAttach, bool visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchiveStatistics", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchiveStatisticsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetArchiveStatisticsBiblosDsException" +
            "Fault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.ArchiveStatistics GetArchiveStatistics(System.Guid idArchive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContentById", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContentByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentContentByIdBiblosDsExcepti" +
            "onFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.DocumentContent GetDocumentContentById(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfoById", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfoByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentInfoByIdBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document GetDocumentInfoById(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentsInfoByIdPaged", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentsInfoByIdPagedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/GetDocumentsInfoByIdPagedBiblosDsExce" +
            "ptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        BiblosDS.Library.Common.Objects.Response.DocumentResponse GetDocumentsInfoByIdPaged(System.Guid[] idDocuments, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/InsertDocumentChain", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/InsertDocumentChainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/InsertDocumentChainBiblosDsExceptionF" +
            "ault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document InsertDocumentChain(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmChain", ReplyAction="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmChainResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BiblosDS.Library.Common.Exceptions.BiblosDsException), Action="http://Vecomp.BiblosDs.Documents/IDocuments/ConfirmChainBiblosDsExceptionFault", Name="BiblosDsException", Namespace="http://schemas.datacontract.org/2004/07/BiblosDS.Library.Common.Exceptions")]
        bool ConfirmChain(System.Guid IdParent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentsChannel : BiblosDS.API.DocumentServiceReference.IDocuments, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentsClient : System.ServiceModel.ClientBase<BiblosDS.API.DocumentServiceReference.IDocuments>, BiblosDS.API.DocumentServiceReference.IDocuments {
        
        public DocumentsClient() {
        }
        
        public DocumentsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateDocument(BiblosDS.Library.Common.Objects.Document Document) {
            base.Channel.UpdateDocument(Document);
        }
        
        public void UpdateDocumentName(System.Guid idDocument, string documentName) {
            base.Channel.UpdateDocumentName(idDocument, documentName);
        }
        
        public bool CheckMetaData(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.CheckMetaData(Document);
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetChainInfoById(System.Guid IdDocument) {
            return base.Channel.GetChainInfoById(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttribute[] GetMetadataStructure(System.Guid IdArchive) {
            return base.Channel.GetMetadataStructure(IdArchive);
        }
        
        public BiblosDS.Library.Common.Objects.Document DocumentCheckOut(System.Guid IdDocument, bool latestVersion, string UserId) {
            return base.Channel.DocumentCheckOut(IdDocument, latestVersion, UserId);
        }
        
        public void DocumentUndoCheckOut(System.Guid IdDocument, string UserId) {
            base.Channel.DocumentUndoCheckOut(IdDocument, UserId);
        }
        
        public System.Guid DocumentAttributeCheckIn(BiblosDS.Library.Common.Objects.Document Document, string UserId) {
            return base.Channel.DocumentAttributeCheckIn(Document, UserId);
        }
        
        public System.Guid DocumentCheckIn(BiblosDS.Library.Common.Objects.Document Document, string UserId) {
            return base.Channel.DocumentCheckIn(Document, UserId);
        }
        
        public void DocumentMoveToArchive(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentArchive Archive, System.Nullable<bool> ForceDelete) {
            base.Channel.DocumentMoveToArchive(IdDocument, Archive, ForceDelete);
        }
        
        public void DocumentMoveToStorage(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentStorage Storage, System.Nullable<bool> ForceDelete) {
            base.Channel.DocumentMoveToStorage(IdDocument, Storage, ForceDelete);
        }
        
        public void DocumentMoveFromTransito(System.Guid IdDocument) {
            base.Channel.DocumentMoveFromTransito(IdDocument);
        }
        
        public void RestoreAttribute(System.Guid IdDocument) {
            base.Channel.RestoreAttribute(IdDocument);
        }
        
        public void SignDocument(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentContent SignerCert, BiblosDS.Library.Common.Objects.DocumentContent SignedDigest, BiblosDS.Library.Common.Objects.DocumentContent Content) {
            base.Channel.SignDocument(IdDocument, SignerCert, SignedDigest, Content);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentContent GetDocumentContent(System.Guid idDocument, System.Nullable<decimal> version, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, System.Nullable<bool> lastVersion) {
            return base.Channel.GetDocumentContent(idDocument, version, outputFormat, lastVersion);
        }
        
        public BiblosDS.Library.Common.Objects.Document GetDocumentInServer(System.Guid idDocument) {
            return base.Channel.GetDocumentInServer(idDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentContent GetDocumentConformContent(System.Guid idDocument, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, string xmlLabel) {
            return base.Channel.GetDocumentConformContent(idDocument, outputFormat, xmlLabel);
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetDocumentInfo(System.Guid idDocument, System.Nullable<decimal> version, System.Nullable<bool> lastVersion) {
            return base.Channel.GetDocumentInfo(idDocument, version, lastVersion);
        }
        
        public System.Guid CreateDocumentChain(string archiveName, BiblosDS.Library.Common.Objects.DocumentAttributeValue[] attributeValues) {
            return base.Channel.CreateDocumentChain(archiveName, attributeValues);
        }
        
        public bool ConfirmDocument(System.Guid idDocument) {
            return base.Channel.ConfirmDocument(idDocument);
        }
        
        public BiblosDS.Library.Common.Objects.Document AddDocumentToChain(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat) {
            return base.Channel.AddDocumentToChain(document, idParent, inputFormat);
        }
        
        public BiblosDS.Library.Common.Objects.Document AddDocumentToChainPDFCrypted(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat) {
            return base.Channel.AddDocumentToChainPDFCrypted(document, idParent, inputFormat);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentServer AddDocumentToMaster(BiblosDS.Library.Common.Objects.Document document) {
            return base.Channel.AddDocumentToMaster(document);
        }
        
        public BiblosDS.Library.Common.Objects.Document AddDocumentChainWithWorkflow(BiblosDS.Library.Common.Objects.Document document, System.Nullable<System.Guid> idParent, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat, string uriWorkflow) {
            return base.Channel.AddDocumentChainWithWorkflow(document, idParent, inputFormat, uriWorkflow);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttribute[] GetAttributesDefinition(string archiveName) {
            return base.Channel.GetAttributesDefinition(archiveName);
        }
        
        public bool CheckIsReady(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.CheckIsReady(Document);
        }
        
        public bool CheckIntegrity(BiblosDS.Library.Common.Objects.Document document, System.Nullable<bool> forceSign) {
            return base.Channel.CheckIntegrity(document, forceSign);
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetChainInfo(System.Guid idChain, System.Nullable<decimal> version, System.Nullable<bool> lastVersion) {
            return base.Channel.GetChainInfo(idChain, version, lastVersion);
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetChainInfoDetails(System.Guid idParent, System.Nullable<bool> isVisible, System.Nullable<decimal> version, System.Nullable<bool> lastVersion) {
            return base.Channel.GetChainInfoDetails(idParent, isVisible, version, lastVersion);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentContent CheckOutDocumentContent(System.Guid idDocument, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat) {
            return base.Channel.CheckOutDocumentContent(idDocument, userId, outputFormat);
        }
        
        public BiblosDS.Library.Common.Objects.Document CheckOutDocument(System.Guid idDocument, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat outputFormat, System.Nullable<bool> returnContent) {
            return base.Channel.CheckOutDocument(idDocument, userId, outputFormat, returnContent);
        }
        
        public void UndoCheckOutDocument(System.Guid idDocument, string userId) {
            base.Channel.UndoCheckOutDocument(idDocument, userId);
        }
        
        public BiblosDS.Library.Common.Objects.Document CheckInDocument(BiblosDS.Library.Common.Objects.Document document, string userId, BiblosDS.Library.Common.Enums.DocumentContentFormat inputFormat, System.Nullable<decimal> version) {
            return base.Channel.CheckInDocument(document, userId, inputFormat, version);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentArchive[] GetArchives() {
            return base.Channel.GetArchives();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorage[] GetStorages() {
            return base.Channel.GetStorages();
        }
        
        public BiblosDS.Library.Common.Objects.DocumentStorageArea[] GetStorageAreas(BiblosDS.Library.Common.Objects.DocumentStorage storage) {
            return base.Channel.GetStorageAreas(storage);
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Guid GetDocumentId(string archiveName, int idBiblos) {
            return base.Channel.GetDocumentId(archiveName, idBiblos);
        }
        
        public void SetVisibleChain(System.Guid idChain, bool visibility) {
            base.Channel.SetVisibleChain(idChain, visibility);
        }
        
        public void SetVisibleDocument(System.Guid idDocument, bool visibility) {
            base.Channel.SetVisibleDocument(idDocument, visibility);
        }
        
        public bool IsDocumentSigned(System.Guid idDocument) {
            return base.Channel.IsDocumentSigned(idDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentCertificate[] GetDocumentSigned(System.Guid idDocument) {
            return base.Channel.GetDocumentSigned(idDocument);
        }
        
        public bool AddDocumentLink(System.Guid IdDocument, System.Guid IdDocumentLink) {
            return base.Channel.AddDocumentLink(IdDocument, IdDocumentLink);
        }
        
        public bool DeleteDocumentLink(System.Guid IdDocument, System.Guid IdDocumentLink) {
            return base.Channel.DeleteDocumentLink(IdDocument, IdDocumentLink);
        }
        
        public BiblosDS.Library.Common.Objects.Document[] GetDocumentLinks(System.Guid IdDocument) {
            return base.Channel.GetDocumentLinks(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttach AddDocumentAttach(System.Guid IdDocument, BiblosDS.Library.Common.Objects.DocumentAttach attach) {
            return base.Channel.AddDocumentAttach(IdDocument, attach);
        }
        
        public bool ConfirmDocumentAttach(System.Guid IdDocumentAttach) {
            return base.Channel.ConfirmDocumentAttach(IdDocumentAttach);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttach[] GetDocumentAttachs(System.Guid IdDocument) {
            return base.Channel.GetDocumentAttachs(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentContent GetDocumentAttachContent(System.Guid IdDocumentAttach) {
            return base.Channel.GetDocumentAttachContent(IdDocumentAttach);
        }
        
        public void SetVisibleDocumentAttach(System.Guid idDocumentAttach, bool visible) {
            base.Channel.SetVisibleDocumentAttach(idDocumentAttach, visible);
        }
        
        public BiblosDS.Library.Common.Objects.ArchiveStatistics GetArchiveStatistics(System.Guid idArchive) {
            return base.Channel.GetArchiveStatistics(idArchive);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentContent GetDocumentContentById(System.Guid IdDocument) {
            return base.Channel.GetDocumentContentById(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.Document GetDocumentInfoById(System.Guid IdDocument) {
            return base.Channel.GetDocumentInfoById(IdDocument);
        }
        
        public BiblosDS.Library.Common.Objects.Response.DocumentResponse GetDocumentsInfoByIdPaged(System.Guid[] idDocuments, int skip, int take) {
            return base.Channel.GetDocumentsInfoByIdPaged(idDocuments, skip, take);
        }
        
        public BiblosDS.Library.Common.Objects.Document InsertDocumentChain(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.InsertDocumentChain(Document);
        }
        
        public bool ConfirmChain(System.Guid IdParent) {
            return base.Channel.ConfirmChain(IdParent);
        }
    }
}
