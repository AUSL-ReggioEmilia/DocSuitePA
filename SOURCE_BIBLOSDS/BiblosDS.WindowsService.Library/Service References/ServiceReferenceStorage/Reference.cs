//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblosDS.WindowsService.Library.ServiceReferenceStorage {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceStorage.IServiceDocumentStorage")]
    public interface IServiceDocumentStorage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/AddDocument", ReplyAction="http://tempuri.org/IServiceDocumentStorage/AddDocumentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        System.Guid AddDocument(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/AddAttachToDocument", ReplyAction="http://tempuri.org/IServiceDocumentStorage/AddAttachToDocumentResponse")]
        System.Guid AddAttachToDocument(BiblosDS.Library.Common.Objects.DocumentAttach Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/GetDocument", ReplyAction="http://tempuri.org/IServiceDocumentStorage/GetDocumentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document GetDocument(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/GetDocumentAttach", ReplyAction="http://tempuri.org/IServiceDocumentStorage/GetDocumentAttachResponse")]
        BiblosDS.Library.Common.Objects.DocumentAttach GetDocumentAttach(BiblosDS.Library.Common.Objects.DocumentAttach Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/GetDocumentConformAttach", ReplyAction="http://tempuri.org/IServiceDocumentStorage/GetDocumentConformAttachResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        BiblosDS.Library.Common.Objects.Document GetDocumentConformAttach(BiblosDS.Library.Common.Objects.Document Document, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/DeleteDocument", ReplyAction="http://tempuri.org/IServiceDocumentStorage/DeleteDocumentResponse")]
        void DeleteDocument(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/RestoreAttribute", ReplyAction="http://tempuri.org/IServiceDocumentStorage/RestoreAttributeResponse")]
        void RestoreAttribute(System.Guid IdDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/WriteAttribute", ReplyAction="http://tempuri.org/IServiceDocumentStorage/WriteAttributeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        void WriteAttribute(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/CheckIntegrity", ReplyAction="http://tempuri.org/IServiceDocumentStorage/CheckIntegrityResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BiblosDS.Library.Common.Objects.DocumentAttach))]
        bool CheckIntegrity(BiblosDS.Library.Common.Objects.Document Document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDocumentStorage/IsAlive", ReplyAction="http://tempuri.org/IServiceDocumentStorage/IsAliveResponse")]
        bool IsAlive();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDocumentStorageChannel : BiblosDS.WindowsService.Library.ServiceReferenceStorage.IServiceDocumentStorage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDocumentStorageClient : System.ServiceModel.ClientBase<BiblosDS.WindowsService.Library.ServiceReferenceStorage.IServiceDocumentStorage>, BiblosDS.WindowsService.Library.ServiceReferenceStorage.IServiceDocumentStorage {
        
        public ServiceDocumentStorageClient() {
        }
        
        public ServiceDocumentStorageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDocumentStorageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDocumentStorageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDocumentStorageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid AddDocument(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.AddDocument(Document);
        }
        
        public System.Guid AddAttachToDocument(BiblosDS.Library.Common.Objects.DocumentAttach Document) {
            return base.Channel.AddAttachToDocument(Document);
        }
        
        public BiblosDS.Library.Common.Objects.Document GetDocument(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.GetDocument(Document);
        }
        
        public BiblosDS.Library.Common.Objects.DocumentAttach GetDocumentAttach(BiblosDS.Library.Common.Objects.DocumentAttach Document) {
            return base.Channel.GetDocumentAttach(Document);
        }
        
        public BiblosDS.Library.Common.Objects.Document GetDocumentConformAttach(BiblosDS.Library.Common.Objects.Document Document, string fileName) {
            return base.Channel.GetDocumentConformAttach(Document, fileName);
        }
        
        public void DeleteDocument(System.Guid IdDocument) {
            base.Channel.DeleteDocument(IdDocument);
        }
        
        public void RestoreAttribute(System.Guid IdDocument) {
            base.Channel.RestoreAttribute(IdDocument);
        }
        
        public void WriteAttribute(BiblosDS.Library.Common.Objects.Document Document) {
            base.Channel.WriteAttribute(Document);
        }
        
        public bool CheckIntegrity(BiblosDS.Library.Common.Objects.Document Document) {
            return base.Channel.CheckIntegrity(Document);
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
    }
}
