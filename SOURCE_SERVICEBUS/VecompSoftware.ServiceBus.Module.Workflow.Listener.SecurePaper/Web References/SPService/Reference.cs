//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VecompSoftware.ServiceBus.Module.Workflow.Listener.SecurePaper.SPService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SPSoap11Binding", Namespace="http://spservice.securepaperappliance.land.it")]
    public partial class SP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback securizeBufferOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizeMessageDigestOnPdfWithKeysOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizeXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizePDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizePDFWithClosingDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizeBufferOnPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizeXMLWithClosingDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback securizeBufferOnPdfWithKeysOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SP() {
            this.Url = global::VecompSoftware.ServiceBus.Module.Workflow.Listener.SecurePaper.Properties.Settings.Default.SecurePaperServiceUrl;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event securizeBufferCompletedEventHandler securizeBufferCompleted;
        
        /// <remarks/>
        public event securizeMessageDigestOnPdfWithKeysCompletedEventHandler securizeMessageDigestOnPdfWithKeysCompleted;
        
        /// <remarks/>
        public event securizeXMLCompletedEventHandler securizeXMLCompleted;
        
        /// <remarks/>
        public event securizePDFCompletedEventHandler securizePDFCompleted;
        
        /// <remarks/>
        public event securizePDFWithClosingDocumentCompletedEventHandler securizePDFWithClosingDocumentCompleted;
        
        /// <remarks/>
        public event securizeBufferOnPdfCompletedEventHandler securizeBufferOnPdfCompleted;
        
        /// <remarks/>
        public event securizeXMLWithClosingDocumentCompletedEventHandler securizeXMLWithClosingDocumentCompleted;
        
        /// <remarks/>
        public event securizeBufferOnPdfWithKeysCompletedEventHandler securizeBufferOnPdfWithKeysCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeBuffer", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizeBuffer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] buffer, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizeBuffer", new object[] {
                        serviceId,
                        buffer,
                        inXml,
                        xmlData,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeBufferAsync(string serviceId, byte[] buffer, byte[] inXml, byte[] xmlData, SignerBean[] signers) {
            this.securizeBufferAsync(serviceId, buffer, inXml, xmlData, signers, null);
        }
        
        /// <remarks/>
        public void securizeBufferAsync(string serviceId, byte[] buffer, byte[] inXml, byte[] xmlData, SignerBean[] signers, object userState) {
            if ((this.securizeBufferOperationCompleted == null)) {
                this.securizeBufferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeBufferOperationCompleted);
            }
            this.InvokeAsync("securizeBuffer", new object[] {
                        serviceId,
                        buffer,
                        inXml,
                        xmlData,
                        signers}, this.securizeBufferOperationCompleted, userState);
        }
        
        private void OnsecurizeBufferOperationCompleted(object arg) {
            if ((this.securizeBufferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeBufferCompleted(this, new securizeBufferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeMessageDigestOnPdfWithKeys", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceBaseResponse securizeMessageDigestOnPdfWithKeys([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string messageDigest, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string messageDigestType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers, [System.Xml.Serialization.XmlElementAttribute("keys", IsNullable=true)] Key[] keys) {
            object[] results = this.Invoke("securizeMessageDigestOnPdfWithKeys", new object[] {
                        serviceId,
                        messageDigest,
                        messageDigestType,
                        inPdf,
                        xmlData,
                        signers,
                        keys});
            return ((SPServiceBaseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeMessageDigestOnPdfWithKeysAsync(string serviceId, string messageDigest, string messageDigestType, byte[] inPdf, byte[] xmlData, SignerBean[] signers, Key[] keys) {
            this.securizeMessageDigestOnPdfWithKeysAsync(serviceId, messageDigest, messageDigestType, inPdf, xmlData, signers, keys, null);
        }
        
        /// <remarks/>
        public void securizeMessageDigestOnPdfWithKeysAsync(string serviceId, string messageDigest, string messageDigestType, byte[] inPdf, byte[] xmlData, SignerBean[] signers, Key[] keys, object userState) {
            if ((this.securizeMessageDigestOnPdfWithKeysOperationCompleted == null)) {
                this.securizeMessageDigestOnPdfWithKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeMessageDigestOnPdfWithKeysOperationCompleted);
            }
            this.InvokeAsync("securizeMessageDigestOnPdfWithKeys", new object[] {
                        serviceId,
                        messageDigest,
                        messageDigestType,
                        inPdf,
                        xmlData,
                        signers,
                        keys}, this.securizeMessageDigestOnPdfWithKeysOperationCompleted, userState);
        }
        
        private void OnsecurizeMessageDigestOnPdfWithKeysOperationCompleted(object arg) {
            if ((this.securizeMessageDigestOnPdfWithKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeMessageDigestOnPdfWithKeysCompleted(this, new securizeMessageDigestOnPdfWithKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeXML", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizeXML([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inXml, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizeXML", new object[] {
                        serviceId,
                        inXml,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeXMLAsync(string serviceId, byte[] inXml, SignerBean[] signers) {
            this.securizeXMLAsync(serviceId, inXml, signers, null);
        }
        
        /// <remarks/>
        public void securizeXMLAsync(string serviceId, byte[] inXml, SignerBean[] signers, object userState) {
            if ((this.securizeXMLOperationCompleted == null)) {
                this.securizeXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeXMLOperationCompleted);
            }
            this.InvokeAsync("securizeXML", new object[] {
                        serviceId,
                        inXml,
                        signers}, this.securizeXMLOperationCompleted, userState);
        }
        
        private void OnsecurizeXMLOperationCompleted(object arg) {
            if ((this.securizeXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeXMLCompleted(this, new securizeXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizePDF", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizePDF([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizePDF", new object[] {
                        serviceId,
                        inPdf,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizePDFAsync(string serviceId, byte[] inPdf, SignerBean[] signers) {
            this.securizePDFAsync(serviceId, inPdf, signers, null);
        }
        
        /// <remarks/>
        public void securizePDFAsync(string serviceId, byte[] inPdf, SignerBean[] signers, object userState) {
            if ((this.securizePDFOperationCompleted == null)) {
                this.securizePDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizePDFOperationCompleted);
            }
            this.InvokeAsync("securizePDF", new object[] {
                        serviceId,
                        inPdf,
                        signers}, this.securizePDFOperationCompleted, userState);
        }
        
        private void OnsecurizePDFOperationCompleted(object arg) {
            if ((this.securizePDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizePDFCompleted(this, new securizePDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizePDFWithClosingDocument", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizePDFWithClosingDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] closingDocumentXml, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizePDFWithClosingDocument", new object[] {
                        serviceId,
                        inPdf,
                        closingDocumentXml,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizePDFWithClosingDocumentAsync(string serviceId, byte[] inPdf, byte[] closingDocumentXml, SignerBean[] signers) {
            this.securizePDFWithClosingDocumentAsync(serviceId, inPdf, closingDocumentXml, signers, null);
        }
        
        /// <remarks/>
        public void securizePDFWithClosingDocumentAsync(string serviceId, byte[] inPdf, byte[] closingDocumentXml, SignerBean[] signers, object userState) {
            if ((this.securizePDFWithClosingDocumentOperationCompleted == null)) {
                this.securizePDFWithClosingDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizePDFWithClosingDocumentOperationCompleted);
            }
            this.InvokeAsync("securizePDFWithClosingDocument", new object[] {
                        serviceId,
                        inPdf,
                        closingDocumentXml,
                        signers}, this.securizePDFWithClosingDocumentOperationCompleted, userState);
        }
        
        private void OnsecurizePDFWithClosingDocumentOperationCompleted(object arg) {
            if ((this.securizePDFWithClosingDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizePDFWithClosingDocumentCompleted(this, new securizePDFWithClosingDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeBufferOnPdf", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizeBufferOnPdf([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] buffer, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizeBufferOnPdf", new object[] {
                        serviceId,
                        buffer,
                        inPdf,
                        xmlData,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeBufferOnPdfAsync(string serviceId, byte[] buffer, byte[] inPdf, byte[] xmlData, SignerBean[] signers) {
            this.securizeBufferOnPdfAsync(serviceId, buffer, inPdf, xmlData, signers, null);
        }
        
        /// <remarks/>
        public void securizeBufferOnPdfAsync(string serviceId, byte[] buffer, byte[] inPdf, byte[] xmlData, SignerBean[] signers, object userState) {
            if ((this.securizeBufferOnPdfOperationCompleted == null)) {
                this.securizeBufferOnPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeBufferOnPdfOperationCompleted);
            }
            this.InvokeAsync("securizeBufferOnPdf", new object[] {
                        serviceId,
                        buffer,
                        inPdf,
                        xmlData,
                        signers}, this.securizeBufferOnPdfOperationCompleted, userState);
        }
        
        private void OnsecurizeBufferOnPdfOperationCompleted(object arg) {
            if ((this.securizeBufferOnPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeBufferOnPdfCompleted(this, new securizeBufferOnPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeXMLWithClosingDocument", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizeXMLWithClosingDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inXml, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] closingDocumentXml, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers) {
            object[] results = this.Invoke("securizeXMLWithClosingDocument", new object[] {
                        serviceId,
                        inXml,
                        closingDocumentXml,
                        signers});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeXMLWithClosingDocumentAsync(string serviceId, byte[] inXml, byte[] closingDocumentXml, SignerBean[] signers) {
            this.securizeXMLWithClosingDocumentAsync(serviceId, inXml, closingDocumentXml, signers, null);
        }
        
        /// <remarks/>
        public void securizeXMLWithClosingDocumentAsync(string serviceId, byte[] inXml, byte[] closingDocumentXml, SignerBean[] signers, object userState) {
            if ((this.securizeXMLWithClosingDocumentOperationCompleted == null)) {
                this.securizeXMLWithClosingDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeXMLWithClosingDocumentOperationCompleted);
            }
            this.InvokeAsync("securizeXMLWithClosingDocument", new object[] {
                        serviceId,
                        inXml,
                        closingDocumentXml,
                        signers}, this.securizeXMLWithClosingDocumentOperationCompleted, userState);
        }
        
        private void OnsecurizeXMLWithClosingDocumentOperationCompleted(object arg) {
            if ((this.securizeXMLWithClosingDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeXMLWithClosingDocumentCompleted(this, new securizeXMLWithClosingDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:securizeBufferOnPdfWithKeys", RequestNamespace="http://spservice.securepaperappliance.land.it", ResponseNamespace="http://spservice.securepaperappliance.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public SPServiceResponse securizeBufferOnPdfWithKeys([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string serviceId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] buffer, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] xmlData, [System.Xml.Serialization.XmlElementAttribute("signers", IsNullable=true)] SignerBean[] signers, [System.Xml.Serialization.XmlElementAttribute("keys", IsNullable=true)] Key[] keys) {
            object[] results = this.Invoke("securizeBufferOnPdfWithKeys", new object[] {
                        serviceId,
                        buffer,
                        inPdf,
                        xmlData,
                        signers,
                        keys});
            return ((SPServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void securizeBufferOnPdfWithKeysAsync(string serviceId, byte[] buffer, byte[] inPdf, byte[] xmlData, SignerBean[] signers, Key[] keys) {
            this.securizeBufferOnPdfWithKeysAsync(serviceId, buffer, inPdf, xmlData, signers, keys, null);
        }
        
        /// <remarks/>
        public void securizeBufferOnPdfWithKeysAsync(string serviceId, byte[] buffer, byte[] inPdf, byte[] xmlData, SignerBean[] signers, Key[] keys, object userState) {
            if ((this.securizeBufferOnPdfWithKeysOperationCompleted == null)) {
                this.securizeBufferOnPdfWithKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecurizeBufferOnPdfWithKeysOperationCompleted);
            }
            this.InvokeAsync("securizeBufferOnPdfWithKeys", new object[] {
                        serviceId,
                        buffer,
                        inPdf,
                        xmlData,
                        signers,
                        keys}, this.securizeBufferOnPdfWithKeysOperationCompleted, userState);
        }
        
        private void OnsecurizeBufferOnPdfWithKeysOperationCompleted(object arg) {
            if ((this.securizeBufferOnPdfWithKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.securizeBufferOnPdfWithKeysCompleted(this, new securizeBufferOnPdfWithKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://spservice.securepaperappliance.land.it/xsd")]
    public partial class SignerBean {
        
        private string domainField;
        
        private string hsmIpField;
        
        private string passwordField;
        
        private string pinField;
        
        private string userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hsmIp {
            get {
                return this.hsmIpField;
            }
            set {
                this.hsmIpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://spservice.securepaperappliance.land.it/xsd")]
    public partial class SPServiceBaseResponse {
        
        private string reasonField;
        
        private byte[] securedDocumentField;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] securedDocument {
            get {
                return this.securedDocumentField;
            }
            set {
                this.securedDocumentField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://spservice.securepaperappliance.land.it/xsd")]
    public partial class Key {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://spservice.securepaperappliance.land.it/xsd")]
    public partial class SPServiceResponse {
        
        private string archiveKeyField;
        
        private string reasonField;
        
        private byte[] securedDocumentField;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string archiveKey {
            get {
                return this.archiveKeyField;
            }
            set {
                this.archiveKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] securedDocument {
            get {
                return this.securedDocumentField;
            }
            set {
                this.securedDocumentField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeBufferCompletedEventHandler(object sender, securizeBufferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeBufferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeBufferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeMessageDigestOnPdfWithKeysCompletedEventHandler(object sender, securizeMessageDigestOnPdfWithKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeMessageDigestOnPdfWithKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeMessageDigestOnPdfWithKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceBaseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceBaseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeXMLCompletedEventHandler(object sender, securizeXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizePDFCompletedEventHandler(object sender, securizePDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizePDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizePDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizePDFWithClosingDocumentCompletedEventHandler(object sender, securizePDFWithClosingDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizePDFWithClosingDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizePDFWithClosingDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeBufferOnPdfCompletedEventHandler(object sender, securizeBufferOnPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeBufferOnPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeBufferOnPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeXMLWithClosingDocumentCompletedEventHandler(object sender, securizeXMLWithClosingDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeXMLWithClosingDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeXMLWithClosingDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void securizeBufferOnPdfWithKeysCompletedEventHandler(object sender, securizeBufferOnPdfWithKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class securizeBufferOnPdfWithKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal securizeBufferOnPdfWithKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SPServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SPServiceResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591