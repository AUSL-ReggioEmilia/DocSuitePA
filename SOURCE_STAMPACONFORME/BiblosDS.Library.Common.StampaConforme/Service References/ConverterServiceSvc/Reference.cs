//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachConversionMode", Namespace="http://BiblosDS/2009/10/AttachConversionMode")]
    public enum AttachConversionMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAttach = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoHeaders = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoBody = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vecomp.StampaConforme.Office.Converter", ConfigurationName="ConverterServiceSvc.IStampaConformeConverter")]
    public interface IStampaConformeConverter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/IsAlive", ReplyAction="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/IsAliveRes" +
            "ponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/GetVersion" +
            "", ReplyAction="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/GetVersion" +
            "Response")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/Convert", ReplyAction="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/ConvertRes" +
            "ponse")]
        byte[] Convert(byte[] fileToConvert, string fileExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/ConvertWit" +
            "hParameters", ReplyAction="http://Vecomp.StampaConforme.Office.Converter/IStampaConformeConverter/ConvertWit" +
            "hParametersResponse")]
        byte[] ConvertWithParameters(byte[] fileToConvert, string fileExtension, BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc.AttachConversionMode mode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStampaConformeConverterChannel : BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc.IStampaConformeConverter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StampaConformeConverterClient : System.ServiceModel.ClientBase<BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc.IStampaConformeConverter>, BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc.IStampaConformeConverter {
        
        public StampaConformeConverterClient() {
        }
        
        public StampaConformeConverterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StampaConformeConverterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StampaConformeConverterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StampaConformeConverterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public byte[] Convert(byte[] fileToConvert, string fileExtension) {
            return base.Channel.Convert(fileToConvert, fileExtension);
        }
        
        public byte[] ConvertWithParameters(byte[] fileToConvert, string fileExtension, BiblosDS.Library.Common.StampaConforme.ConverterServiceSvc.AttachConversionMode mode) {
            return base.Channel.ConvertWithParameters(fileToConvert, fileExtension, mode);
        }
    }
}
