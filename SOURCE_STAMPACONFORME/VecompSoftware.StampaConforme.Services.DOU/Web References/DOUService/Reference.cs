//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VecompSoftware.StampaConforme.Services.DOU.DOUService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DOUSoap11Binding", Namespace="http://dou.land.it")]
    public partial class DOU : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback uploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWithPreviousDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWithDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateNoGlyphOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAndUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWithPreviousDocumentWithParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAndUploadWithParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWithParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWithParamOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DOU() {
            this.Url = global::VecompSoftware.StampaConforme.Services.DOU.Properties.Settings.Default.VecompSoftware_StampaConforme_Services_DOU_DOUService_DOU;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event uploadCompletedEventHandler uploadCompleted;
        
        /// <remarks/>
        public event updateWithPreviousDocumentCompletedEventHandler updateWithPreviousDocumentCompleted;
        
        /// <remarks/>
        public event deleteWithDocumentCompletedEventHandler deleteWithDocumentCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event updateNoGlyphCompletedEventHandler updateNoGlyphCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event createAndUploadCompletedEventHandler createAndUploadCompleted;
        
        /// <remarks/>
        public event updateWithPreviousDocumentWithParamCompletedEventHandler updateWithPreviousDocumentWithParamCompleted;
        
        /// <remarks/>
        public event createAndUploadWithParamCompletedEventHandler createAndUploadWithParamCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event updateWithParamCompletedEventHandler updateWithParamCompleted;
        
        /// <remarks/>
        public event createWithParamCompletedEventHandler createWithParamCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:upload", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse upload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] metadata) {
            object[] results = this.Invoke("upload", new object[] {
                        inPdf,
                        idPdf,
                        idservice,
                        metadata});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void uploadAsync(byte[] inPdf, string idPdf, int idservice, byte[] metadata) {
            this.uploadAsync(inPdf, idPdf, idservice, metadata, null);
        }
        
        /// <remarks/>
        public void uploadAsync(byte[] inPdf, string idPdf, int idservice, byte[] metadata, object userState) {
            if ((this.uploadOperationCompleted == null)) {
                this.uploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadOperationCompleted);
            }
            this.InvokeAsync("upload", new object[] {
                        inPdf,
                        idPdf,
                        idservice,
                        metadata}, this.uploadOperationCompleted, userState);
        }
        
        private void OnuploadOperationCompleted(object arg) {
            if ((this.uploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadCompleted(this, new uploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateWithPreviousDocument", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse updateWithPreviousDocument([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] oldPdf, int idservice) {
            object[] results = this.Invoke("updateWithPreviousDocument", new object[] {
                        inPdf,
                        oldPdf,
                        idservice});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateWithPreviousDocumentAsync(byte[] inPdf, byte[] oldPdf, int idservice) {
            this.updateWithPreviousDocumentAsync(inPdf, oldPdf, idservice, null);
        }
        
        /// <remarks/>
        public void updateWithPreviousDocumentAsync(byte[] inPdf, byte[] oldPdf, int idservice, object userState) {
            if ((this.updateWithPreviousDocumentOperationCompleted == null)) {
                this.updateWithPreviousDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWithPreviousDocumentOperationCompleted);
            }
            this.InvokeAsync("updateWithPreviousDocument", new object[] {
                        inPdf,
                        oldPdf,
                        idservice}, this.updateWithPreviousDocumentOperationCompleted, userState);
        }
        
        private void OnupdateWithPreviousDocumentOperationCompleted(object arg) {
            if ((this.updateWithPreviousDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWithPreviousDocumentCompleted(this, new updateWithPreviousDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteWithDocument", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse deleteWithDocument([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice) {
            object[] results = this.Invoke("deleteWithDocument", new object[] {
                        inPdf,
                        idservice});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteWithDocumentAsync(byte[] inPdf, int idservice) {
            this.deleteWithDocumentAsync(inPdf, idservice, null);
        }
        
        /// <remarks/>
        public void deleteWithDocumentAsync(byte[] inPdf, int idservice, object userState) {
            if ((this.deleteWithDocumentOperationCompleted == null)) {
                this.deleteWithDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWithDocumentOperationCompleted);
            }
            this.InvokeAsync("deleteWithDocument", new object[] {
                        inPdf,
                        idservice}, this.deleteWithDocumentOperationCompleted, userState);
        }
        
        private void OndeleteWithDocumentOperationCompleted(object arg) {
            if ((this.deleteWithDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWithDocumentCompleted(this, new deleteWithDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:update", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse update([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idPdf, int idservice) {
            object[] results = this.Invoke("update", new object[] {
                        inPdf,
                        idPdf,
                        idservice});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(byte[] inPdf, string idPdf, int idservice) {
            this.updateAsync(inPdf, idPdf, idservice, null);
        }
        
        /// <remarks/>
        public void updateAsync(byte[] inPdf, string idPdf, int idservice, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        inPdf,
                        idPdf,
                        idservice}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateNoGlyph", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse updateNoGlyph([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice) {
            object[] results = this.Invoke("updateNoGlyph", new object[] {
                        inPdf,
                        idservice});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateNoGlyphAsync(byte[] inPdf, int idservice) {
            this.updateNoGlyphAsync(inPdf, idservice, null);
        }
        
        /// <remarks/>
        public void updateNoGlyphAsync(byte[] inPdf, int idservice, object userState) {
            if ((this.updateNoGlyphOperationCompleted == null)) {
                this.updateNoGlyphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateNoGlyphOperationCompleted);
            }
            this.InvokeAsync("updateNoGlyph", new object[] {
                        inPdf,
                        idservice}, this.updateNoGlyphOperationCompleted, userState);
        }
        
        private void OnupdateNoGlyphOperationCompleted(object arg) {
            if ((this.updateNoGlyphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateNoGlyphCompleted(this, new updateNoGlyphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:delete", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse delete([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idPdf, int idservice) {
            object[] results = this.Invoke("delete", new object[] {
                        idPdf,
                        idservice});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(string idPdf, int idservice) {
            this.deleteAsync(idPdf, idservice, null);
        }
        
        /// <remarks/>
        public void deleteAsync(string idPdf, int idservice, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        idPdf,
                        idservice}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAndUpload", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse createAndUpload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ArchiveKey key, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] metadata) {
            object[] results = this.Invoke("createAndUpload", new object[] {
                        inPdf,
                        idservice,
                        key,
                        metadata});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createAndUploadAsync(byte[] inPdf, int idservice, ArchiveKey key, byte[] metadata) {
            this.createAndUploadAsync(inPdf, idservice, key, metadata, null);
        }
        
        /// <remarks/>
        public void createAndUploadAsync(byte[] inPdf, int idservice, ArchiveKey key, byte[] metadata, object userState) {
            if ((this.createAndUploadOperationCompleted == null)) {
                this.createAndUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAndUploadOperationCompleted);
            }
            this.InvokeAsync("createAndUpload", new object[] {
                        inPdf,
                        idservice,
                        key,
                        metadata}, this.createAndUploadOperationCompleted, userState);
        }
        
        private void OncreateAndUploadOperationCompleted(object arg) {
            if ((this.createAndUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAndUploadCompleted(this, new createAndUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateWithPreviousDocumentWithParam", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse updateWithPreviousDocumentWithParam([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] oldPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Param param) {
            object[] results = this.Invoke("updateWithPreviousDocumentWithParam", new object[] {
                        inPdf,
                        oldPdf,
                        idservice,
                        param});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateWithPreviousDocumentWithParamAsync(byte[] inPdf, byte[] oldPdf, int idservice, Param param) {
            this.updateWithPreviousDocumentWithParamAsync(inPdf, oldPdf, idservice, param, null);
        }
        
        /// <remarks/>
        public void updateWithPreviousDocumentWithParamAsync(byte[] inPdf, byte[] oldPdf, int idservice, Param param, object userState) {
            if ((this.updateWithPreviousDocumentWithParamOperationCompleted == null)) {
                this.updateWithPreviousDocumentWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWithPreviousDocumentWithParamOperationCompleted);
            }
            this.InvokeAsync("updateWithPreviousDocumentWithParam", new object[] {
                        inPdf,
                        oldPdf,
                        idservice,
                        param}, this.updateWithPreviousDocumentWithParamOperationCompleted, userState);
        }
        
        private void OnupdateWithPreviousDocumentWithParamOperationCompleted(object arg) {
            if ((this.updateWithPreviousDocumentWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWithPreviousDocumentWithParamCompleted(this, new updateWithPreviousDocumentWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAndUploadWithParam", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse createAndUploadWithParam([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ArchiveKey key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Param param, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] metadata) {
            object[] results = this.Invoke("createAndUploadWithParam", new object[] {
                        inPdf,
                        idservice,
                        key,
                        param,
                        metadata});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createAndUploadWithParamAsync(byte[] inPdf, int idservice, ArchiveKey key, Param param, byte[] metadata) {
            this.createAndUploadWithParamAsync(inPdf, idservice, key, param, metadata, null);
        }
        
        /// <remarks/>
        public void createAndUploadWithParamAsync(byte[] inPdf, int idservice, ArchiveKey key, Param param, byte[] metadata, object userState) {
            if ((this.createAndUploadWithParamOperationCompleted == null)) {
                this.createAndUploadWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAndUploadWithParamOperationCompleted);
            }
            this.InvokeAsync("createAndUploadWithParam", new object[] {
                        inPdf,
                        idservice,
                        key,
                        param,
                        metadata}, this.createAndUploadWithParamOperationCompleted, userState);
        }
        
        private void OncreateAndUploadWithParamOperationCompleted(object arg) {
            if ((this.createAndUploadWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAndUploadWithParamCompleted(this, new createAndUploadWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:create", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse create([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ArchiveKey key) {
            object[] results = this.Invoke("create", new object[] {
                        inPdf,
                        idservice,
                        key});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(byte[] inPdf, int idservice, ArchiveKey key) {
            this.createAsync(inPdf, idservice, key, null);
        }
        
        /// <remarks/>
        public void createAsync(byte[] inPdf, int idservice, ArchiveKey key, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        inPdf,
                        idservice,
                        key}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateWithParam", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse updateWithParam([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Param param) {
            object[] results = this.Invoke("updateWithParam", new object[] {
                        inPdf,
                        idPdf,
                        idservice,
                        param});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void updateWithParamAsync(byte[] inPdf, string idPdf, int idservice, Param param) {
            this.updateWithParamAsync(inPdf, idPdf, idservice, param, null);
        }
        
        /// <remarks/>
        public void updateWithParamAsync(byte[] inPdf, string idPdf, int idservice, Param param, object userState) {
            if ((this.updateWithParamOperationCompleted == null)) {
                this.updateWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWithParamOperationCompleted);
            }
            this.InvokeAsync("updateWithParam", new object[] {
                        inPdf,
                        idPdf,
                        idservice,
                        param}, this.updateWithParamOperationCompleted, userState);
        }
        
        private void OnupdateWithParamOperationCompleted(object arg) {
            if ((this.updateWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWithParamCompleted(this, new updateWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createWithParam", RequestNamespace="http://dou.land.it", ResponseNamespace="http://dou.land.it", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public DOUResponse createWithParam([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] inPdf, int idservice, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ArchiveKey key, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Param param) {
            object[] results = this.Invoke("createWithParam", new object[] {
                        inPdf,
                        idservice,
                        key,
                        param});
            return ((DOUResponse)(results[0]));
        }
        
        /// <remarks/>
        public void createWithParamAsync(byte[] inPdf, int idservice, ArchiveKey key, Param param) {
            this.createWithParamAsync(inPdf, idservice, key, param, null);
        }
        
        /// <remarks/>
        public void createWithParamAsync(byte[] inPdf, int idservice, ArchiveKey key, Param param, object userState) {
            if ((this.createWithParamOperationCompleted == null)) {
                this.createWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWithParamOperationCompleted);
            }
            this.InvokeAsync("createWithParam", new object[] {
                        inPdf,
                        idservice,
                        key,
                        param}, this.createWithParamOperationCompleted, userState);
        }
        
        private void OncreateWithParamOperationCompleted(object arg) {
            if ((this.createWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWithParamCompleted(this, new createWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dou.land.it/xsd")]
    public partial class DOUResponse {
        
        private string idPdfField;
        
        private byte[] pdfField;
        
        private string reasonField;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string idPdf {
            get {
                return this.idPdfField;
            }
            set {
                this.idPdfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] pdf {
            get {
                return this.pdfField;
            }
            set {
                this.pdfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://pagerange.param.dou.land.it/xsd")]
    public partial class PageRange {
        
        private string rangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://coords.param.dou.land.it/xsd")]
    public partial class Coords {
        
        private int xField;
        
        private bool xFieldSpecified;
        
        private int yField;
        
        private bool yFieldSpecified;
        
        /// <remarks/>
        public int x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ySpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://param.dou.land.it/xsd")]
    public partial class Param {
        
        private Coords coordsField;
        
        private PageRange pagerangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Coords coords {
            get {
                return this.coordsField;
            }
            set {
                this.coordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PageRange pagerange {
            get {
                return this.pagerangeField;
            }
            set {
                this.pagerangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://keys.dou.land.it/xsd")]
    public partial class ArchiveKey {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void uploadCompletedEventHandler(object sender, uploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateWithPreviousDocumentCompletedEventHandler(object sender, updateWithPreviousDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWithPreviousDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWithPreviousDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteWithDocumentCompletedEventHandler(object sender, deleteWithDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteWithDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteWithDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateNoGlyphCompletedEventHandler(object sender, updateNoGlyphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateNoGlyphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateNoGlyphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createAndUploadCompletedEventHandler(object sender, createAndUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAndUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAndUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateWithPreviousDocumentWithParamCompletedEventHandler(object sender, updateWithPreviousDocumentWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWithPreviousDocumentWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWithPreviousDocumentWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createAndUploadWithParamCompletedEventHandler(object sender, createAndUploadWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAndUploadWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAndUploadWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateWithParamCompletedEventHandler(object sender, updateWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createWithParamCompletedEventHandler(object sender, createWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DOUResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DOUResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591