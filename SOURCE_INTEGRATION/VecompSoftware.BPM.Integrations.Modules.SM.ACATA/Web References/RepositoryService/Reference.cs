//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VecompSoftware.BPM.Integrations.Modules.SM.ACATA.RepositoryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RepositoryServiceBinding", Namespace="repositoryservice.acaris.acta.doqui.it")]
    public partial class RepositoryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getRepositoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepositoryInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RepositoryService() {
            this.Url = global::VecompSoftware.BPM.Integrations.Modules.SM.ACATA.Properties.Settings.Default.VecompSoftware_BPM_Integrations_Modules_SM_ACATA_RepositoryService_RepositoryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getRepositoriesCompletedEventHandler getRepositoriesCompleted;
        
        /// <remarks/>
        public event getRepositoryInfoCompletedEventHandler getRepositoryInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlArrayAttribute("getRepositoriesResponse", Namespace="archive.acaris.acta.doqui.it")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("repository", IsNullable=false)]
        public acarisRepositoryEntryType[] getRepositories([System.Xml.Serialization.XmlElementAttribute("getRepositories", Namespace="archive.acaris.acta.doqui.it")] getRepositories getRepositories1) {
            object[] results = this.Invoke("getRepositories", new object[] {
                        getRepositories1});
            return ((acarisRepositoryEntryType[])(results[0]));
        }
        
        /// <remarks/>
        public void getRepositoriesAsync(getRepositories getRepositories1) {
            this.getRepositoriesAsync(getRepositories1, null);
        }
        
        /// <remarks/>
        public void getRepositoriesAsync(getRepositories getRepositories1, object userState) {
            if ((this.getRepositoriesOperationCompleted == null)) {
                this.getRepositoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepositoriesOperationCompleted);
            }
            this.InvokeAsync("getRepositories", new object[] {
                        getRepositories1}, this.getRepositoriesOperationCompleted, userState);
        }
        
        private void OngetRepositoriesOperationCompleted(object arg) {
            if ((this.getRepositoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepositoriesCompleted(this, new getRepositoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getRepositoryInfoResponse", Namespace="archive.acaris.acta.doqui.it")]
        public getRepositoryInfoResponse getRepositoryInfo([System.Xml.Serialization.XmlElementAttribute("getRepositoryInfo", Namespace="archive.acaris.acta.doqui.it")] getRepositoryInfo getRepositoryInfo1) {
            object[] results = this.Invoke("getRepositoryInfo", new object[] {
                        getRepositoryInfo1});
            return ((getRepositoryInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getRepositoryInfoAsync(getRepositoryInfo getRepositoryInfo1) {
            this.getRepositoryInfoAsync(getRepositoryInfo1, null);
        }
        
        /// <remarks/>
        public void getRepositoryInfoAsync(getRepositoryInfo getRepositoryInfo1, object userState) {
            if ((this.getRepositoryInfoOperationCompleted == null)) {
                this.getRepositoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepositoryInfoOperationCompleted);
            }
            this.InvokeAsync("getRepositoryInfo", new object[] {
                        getRepositoryInfo1}, this.getRepositoryInfoOperationCompleted, userState);
        }
        
        private void OngetRepositoryInfoOperationCompleted(object arg) {
            if ((this.getRepositoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepositoryInfoCompleted(this, new getRepositoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="archive.acaris.acta.doqui.it")]
    public partial class getRepositories {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="archive.acaris.acta.doqui.it")]
    public partial class acarisRepositoryInfoType {
        
        private ObjectIdType repositoryIdField;
        
        private string repositoryNameField;
        
        private string repositoryURIField;
        
        private string repositoryDescriptionField;
        
        private ObjectIdType rootFolderIdField;
        
        private ObjectIdType documentRootFolderIdField;
        
        private int numeroMassimoRisultatiField;
        
        /// <remarks/>
        public ObjectIdType repositoryId {
            get {
                return this.repositoryIdField;
            }
            set {
                this.repositoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string repositoryName {
            get {
                return this.repositoryNameField;
            }
            set {
                this.repositoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string repositoryURI {
            get {
                return this.repositoryURIField;
            }
            set {
                this.repositoryURIField = value;
            }
        }
        
        /// <remarks/>
        public string repositoryDescription {
            get {
                return this.repositoryDescriptionField;
            }
            set {
                this.repositoryDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public ObjectIdType rootFolderId {
            get {
                return this.rootFolderIdField;
            }
            set {
                this.rootFolderIdField = value;
            }
        }
        
        /// <remarks/>
        public ObjectIdType documentRootFolderId {
            get {
                return this.documentRootFolderIdField;
            }
            set {
                this.documentRootFolderIdField = value;
            }
        }
        
        /// <remarks/>
        public int numeroMassimoRisultati {
            get {
                return this.numeroMassimoRisultatiField;
            }
            set {
                this.numeroMassimoRisultatiField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="common.acaris.acta.doqui.it")]
    public partial class ObjectIdType {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="archive.acaris.acta.doqui.it")]
    public partial class acarisRepositoryEntryType {
        
        private ObjectIdType repositoryIdField;
        
        private string repositoryNameField;
        
        private string repositoryURIField;
        
        /// <remarks/>
        public ObjectIdType repositoryId {
            get {
                return this.repositoryIdField;
            }
            set {
                this.repositoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string repositoryName {
            get {
                return this.repositoryNameField;
            }
            set {
                this.repositoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string repositoryURI {
            get {
                return this.repositoryURIField;
            }
            set {
                this.repositoryURIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="archive.acaris.acta.doqui.it")]
    public partial class getRepositoryInfo {
        
        private ObjectIdType repositoryIdField;
        
        /// <remarks/>
        public ObjectIdType repositoryId {
            get {
                return this.repositoryIdField;
            }
            set {
                this.repositoryIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="archive.acaris.acta.doqui.it")]
    public partial class getRepositoryInfoResponse {
        
        private acarisRepositoryInfoType repositoryInfoField;
        
        /// <remarks/>
        public acarisRepositoryInfoType repositoryInfo {
            get {
                return this.repositoryInfoField;
            }
            set {
                this.repositoryInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRepositoriesCompletedEventHandler(object sender, getRepositoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepositoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepositoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public acarisRepositoryEntryType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((acarisRepositoryEntryType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRepositoryInfoCompletedEventHandler(object sender, getRepositoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepositoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepositoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getRepositoryInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getRepositoryInfoResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591